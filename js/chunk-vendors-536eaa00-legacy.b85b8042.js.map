{"version":3,"file":"js/chunk-vendors-536eaa00-legacy.b85b8042.js","mappings":"yGAEAA,EAAQC,MAAQ,EAAhB,MACAD,EAAQE,OAAS,EAAjB,MACAF,EAAQG,IAAM,EAAd,KACAH,EAAQI,IAAM,EAAd,MACAJ,EAAQK,IAAM,EAAd,M,kCCJA,IAAIC,EAAS,EAAQ,MACjBC,EAAW,EAAQ,MAEnBC,EAAQ,GAEZ,SAASC,EAASC,GAChBJ,EAAOK,MAAMD,EAAGE,OAAQ,EAAG,qBAE3BC,KAAKH,GAAK,IAAII,MAAM,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,KAAKH,GAAGE,OAAQG,IAClCF,KAAKH,GAAGK,GAAKL,EAAGK,GAGpB,SAASC,EAAYC,GACnB,SAASb,EAAIc,GACXD,EAAKE,KAAKN,KAAMK,GAChBL,KAAKO,WAEPb,EAASH,EAAKa,GAGd,IADA,IAAII,EAAOC,OAAOD,KAAKb,GACdO,EAAI,EAAGA,EAAIM,EAAKT,OAAQG,IAAK,CACpC,IAAIQ,EAAMF,EAAKN,GACfX,EAAIoB,UAAUD,GAAOf,EAAMe,GAO7B,OAJAnB,EAAIqB,OAAS,SAAgBP,GAC3B,OAAO,IAAId,EAAIc,IAGVd,EAGTJ,EAAQgB,YAAcA,EAEtBR,EAAMY,SAAW,WACf,IAAIM,EAAQ,IAAIjB,EAASI,KAAKK,QAAQR,IACtCG,KAAKc,UAAYD,GAGnBlB,EAAMoB,QAAU,SAAiBC,EAAKC,EAAOC,EAAKC,GAChD,IAAIN,EAAQb,KAAKc,UACbM,EAAapB,KAAKqB,YAAYC,OAAOX,UAErCd,EAAKgB,EAAMhB,GACf,GAAkB,YAAdG,KAAKuB,KAAoB,CAC3B,IAAK,IAAIrB,EAAI,EAAGA,EAAIF,KAAKwB,UAAWtB,IAClCL,EAAGK,IAAMc,EAAIC,EAAQf,GAEvBkB,EAAWL,QAAQT,KAAKN,KAAMH,EAAI,EAAGqB,EAAKC,GAE1C,IAASjB,EAAI,EAAGA,EAAIF,KAAKwB,UAAWtB,IAClCL,EAAGK,GAAKgB,EAAIC,EAASjB,OAClB,CACLkB,EAAWL,QAAQT,KAAKN,KAAMgB,EAAKC,EAAOC,EAAKC,GAE/C,IAASjB,EAAI,EAAGA,EAAIF,KAAKwB,UAAWtB,IAClCgB,EAAIC,EAASjB,IAAML,EAAGK,GAExB,IAASA,EAAI,EAAGA,EAAIF,KAAKwB,UAAWtB,IAClCL,EAAGK,GAAKc,EAAIC,EAAQf,M,kCC5D1B,IAAIT,EAAS,EAAQ,MAErB,SAASJ,EAAOgB,GACdL,KAAKK,QAAUA,EAEfL,KAAKuB,KAAOvB,KAAKK,QAAQkB,KACzBvB,KAAKwB,UAAY,EACjBxB,KAAKyB,QAELzB,KAAK0B,OAAS,IAAIzB,MAAMD,KAAKwB,WAC7BxB,KAAK2B,UAAY,EAEnBC,EAAOzC,QAAUE,EAEjBA,EAAOsB,UAAUc,MAAQ,aAIzBpC,EAAOsB,UAAUkB,OAAS,SAAgBC,GACxC,OAAoB,IAAhBA,EAAK/B,OACA,GAES,YAAdC,KAAKuB,KACAvB,KAAK+B,eAAeD,GAEpB9B,KAAKgC,eAAeF,IAG/BzC,EAAOsB,UAAUsB,QAAU,SAAiBH,EAAMI,GAGhD,IADA,IAAIC,EAAMC,KAAKD,IAAInC,KAAK0B,OAAO3B,OAASC,KAAK2B,UAAWG,EAAK/B,OAASmC,GAC7DhC,EAAI,EAAGA,EAAIiC,EAAKjC,IACvBF,KAAK0B,OAAO1B,KAAK2B,UAAYzB,GAAK4B,EAAKI,EAAMhC,GAI/C,OAHAF,KAAK2B,WAAaQ,EAGXA,GAGT9C,EAAOsB,UAAU0B,aAAe,SAAsBnB,EAAKgB,GAGzD,OAFAlC,KAAKe,QAAQf,KAAK0B,OAAQ,EAAGR,EAAKgB,GAClClC,KAAK2B,UAAY,EACV3B,KAAKwB,WAGdnC,EAAOsB,UAAUqB,eAAiB,SAAwBF,GACxD,IAAIQ,EAAW,EACXC,EAAY,EAEZC,GAAUxC,KAAK2B,UAAYG,EAAK/B,QAAUC,KAAKwB,UAAa,EAC5DN,EAAM,IAAIjB,MAAMuC,EAAQxC,KAAKwB,WAEV,IAAnBxB,KAAK2B,YACPW,GAAYtC,KAAKiC,QAAQH,EAAMQ,GAE3BtC,KAAK2B,YAAc3B,KAAK0B,OAAO3B,SACjCwC,GAAavC,KAAKqC,aAAanB,EAAKqB,KAKxC,IADA,IAAIE,EAAMX,EAAK/B,QAAW+B,EAAK/B,OAASuC,GAAYtC,KAAKwB,UAClDc,EAAWG,EAAKH,GAAYtC,KAAKwB,UACtCxB,KAAKe,QAAQe,EAAMQ,EAAUpB,EAAKqB,GAClCA,GAAavC,KAAKwB,UAIpB,KAAOc,EAAWR,EAAK/B,OAAQuC,IAAYtC,KAAK2B,YAC9C3B,KAAK0B,OAAO1B,KAAK2B,WAAaG,EAAKQ,GAErC,OAAOpB,GAGT7B,EAAOsB,UAAUoB,eAAiB,SAAwBD,GAQxD,IAPA,IAAIQ,EAAW,EACXC,EAAY,EAEZC,EAAQJ,KAAKM,MAAM1C,KAAK2B,UAAYG,EAAK/B,QAAUC,KAAKwB,WAAa,EACrEN,EAAM,IAAIjB,MAAMuC,EAAQxC,KAAKwB,WAG1BgB,EAAQ,EAAGA,IAChBF,GAAYtC,KAAKiC,QAAQH,EAAMQ,GAC/BC,GAAavC,KAAKqC,aAAanB,EAAKqB,GAMtC,OAFAD,GAAYtC,KAAKiC,QAAQH,EAAMQ,GAExBpB,GAGT7B,EAAOsB,UAAUgC,MAAQ,SAAejB,GACtC,IAAIkB,EAIAC,EAMJ,OATInB,IACFkB,EAAQ5C,KAAK6B,OAAOH,IAIpBmB,EADgB,YAAd7C,KAAKuB,KACAvB,KAAK8C,gBAEL9C,KAAK+C,gBAEVH,EACKA,EAAMI,OAAOH,GAEbA,GAGXxD,EAAOsB,UAAUsC,KAAO,SAAcvB,EAAQQ,GAC5C,GAAY,IAARA,EACF,OAAO,EAET,MAAOA,EAAMR,EAAO3B,OAClB2B,EAAOQ,KAAS,EAElB,OAAO,GAGT7C,EAAOsB,UAAUmC,cAAgB,WAC/B,IAAK9C,KAAKiD,KAAKjD,KAAK0B,OAAQ1B,KAAK2B,WAC/B,MAAO,GAET,IAAIT,EAAM,IAAIjB,MAAMD,KAAKwB,WAEzB,OADAxB,KAAKe,QAAQf,KAAK0B,OAAQ,EAAGR,EAAK,GAC3BA,GAGT7B,EAAOsB,UAAUuC,OAAS,SAAgBxB,GACxC,OAAOA,GAGTrC,EAAOsB,UAAUoC,cAAgB,WAC/BtD,EAAOK,MAAME,KAAK2B,UAAW3B,KAAKwB,UAAW,8BAC7C,IAAIN,EAAM,IAAIjB,MAAMD,KAAKwB,WAGzB,OAFAxB,KAAKqC,aAAanB,EAAK,GAEhBlB,KAAKkD,OAAOhC,K,iCCzIrB,IAAIzB,EAAS,EAAQ,MACjBC,EAAW,EAAQ,MAEnBN,EAAQ,EAAQ,MAChBC,EAAS,EAAQ,MAErB,SAAS8D,IACPnD,KAAKoD,IAAM,IAAInD,MAAM,GACrBD,KAAKQ,KAAO,KAGd,SAASlB,EAAIe,GACXhB,EAAOiB,KAAKN,KAAMK,GAElB,IAAIQ,EAAQ,IAAIsC,EAChBnD,KAAKqD,UAAYxC,EAEjBb,KAAKsD,WAAWzC,EAAOR,EAAQK,KAEjChB,EAASJ,EAAKD,GACduC,EAAOzC,QAAUG,EAEjBA,EAAIsB,OAAS,SAAgBP,GAC3B,OAAO,IAAIf,EAAIe,IAGjB,IAAIkD,EAAa,CACf,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGvBjE,EAAIqB,UAAU2C,WAAa,SAAoBzC,EAAOH,GACpDG,EAAML,KAAO,IAAIP,MAAM,IAEvBR,EAAOK,MAAMY,EAAIX,OAAQC,KAAKwB,UAAW,sBAEzC,IAAIgC,EAAKpE,EAAMqE,aAAa/C,EAAK,GAC7BgD,EAAKtE,EAAMqE,aAAa/C,EAAK,GAEjCtB,EAAMuE,IAAIH,EAAIE,EAAI7C,EAAMuC,IAAK,GAC7BI,EAAK3C,EAAMuC,IAAI,GACfM,EAAK7C,EAAMuC,IAAI,GACf,IAAK,IAAIlD,EAAI,EAAGA,EAAIW,EAAML,KAAKT,OAAQG,GAAK,EAAG,CAC7C,IAAI0D,EAAQL,EAAWrD,IAAM,GAC7BsD,EAAKpE,EAAMyE,OAAOL,EAAII,GACtBF,EAAKtE,EAAMyE,OAAOH,EAAIE,GACtBxE,EAAM0E,IAAIN,EAAIE,EAAI7C,EAAML,KAAMN,KAIlCZ,EAAIqB,UAAUI,QAAU,SAAiBC,EAAKC,EAAOC,EAAKC,GACxD,IAAIN,EAAQb,KAAKqD,UAEbU,EAAI3E,EAAMqE,aAAazC,EAAKC,GAC5B+C,EAAI5E,EAAMqE,aAAazC,EAAKC,EAAQ,GAGxC7B,EAAM6E,GAAGF,EAAGC,EAAGnD,EAAMuC,IAAK,GAC1BW,EAAIlD,EAAMuC,IAAI,GACdY,EAAInD,EAAMuC,IAAI,GAEI,YAAdpD,KAAKuB,KACPvB,KAAKkE,SAASrD,EAAOkD,EAAGC,EAAGnD,EAAMuC,IAAK,GAEtCpD,KAAKmE,SAAStD,EAAOkD,EAAGC,EAAGnD,EAAMuC,IAAK,GAExCW,EAAIlD,EAAMuC,IAAI,GACdY,EAAInD,EAAMuC,IAAI,GAEdhE,EAAMgF,cAAclD,EAAK6C,EAAG5C,GAC5B/B,EAAMgF,cAAclD,EAAK8C,EAAG7C,EAAS,IAGvC7B,EAAIqB,UAAUsC,KAAO,SAAcvB,EAAQQ,GAEzC,IADA,IAAImC,EAAQ3C,EAAO3B,OAASmC,EACnBhC,EAAIgC,EAAKhC,EAAIwB,EAAO3B,OAAQG,IACnCwB,EAAOxB,GAAKmE,EAEd,OAAO,GAGT/E,EAAIqB,UAAUuC,OAAS,SAAgBxB,GAErC,IADA,IAAI4C,EAAM5C,EAAOA,EAAO3B,OAAS,GACxBG,EAAIwB,EAAO3B,OAASuE,EAAKpE,EAAIwB,EAAO3B,OAAQG,IACnDT,EAAOK,MAAM4B,EAAOxB,GAAIoE,GAE1B,OAAO5C,EAAO6C,MAAM,EAAG7C,EAAO3B,OAASuE,IAGzChF,EAAIqB,UAAUuD,SAAW,SAAkBrD,EAAO2D,EAAQC,EAAQvD,EAAKgB,GAKrE,IAJA,IAAI6B,EAAIS,EACJR,EAAIS,EAGCvE,EAAI,EAAGA,EAAIW,EAAML,KAAKT,OAAQG,GAAK,EAAG,CAC7C,IAAIwE,EAAO7D,EAAML,KAAKN,GAClByE,EAAO9D,EAAML,KAAKN,EAAI,GAG1Bd,EAAMwF,OAAOZ,EAAGnD,EAAMuC,IAAK,GAE3BsB,GAAQ7D,EAAMuC,IAAI,GAClBuB,GAAQ9D,EAAMuC,IAAI,GAClB,IAAIyB,EAAIzF,EAAM0F,WAAWJ,EAAMC,GAC3BI,EAAI3F,EAAM4F,QAAQH,GAElBI,EAAIjB,EACRA,GAAKD,EAAIgB,KAAO,EAChBhB,EAAIkB,EAIN7F,EAAM8F,IAAIlB,EAAGD,EAAG7C,EAAKgB,IAGvB5C,EAAIqB,UAAUwD,SAAW,SAAkBtD,EAAO2D,EAAQC,EAAQvD,EAAKgB,GAKrE,IAJA,IAAI6B,EAAIU,EACJT,EAAIQ,EAGCtE,EAAIW,EAAML,KAAKT,OAAS,EAAGG,GAAK,EAAGA,GAAK,EAAG,CAClD,IAAIwE,EAAO7D,EAAML,KAAKN,GAClByE,EAAO9D,EAAML,KAAKN,EAAI,GAG1Bd,EAAMwF,OAAOb,EAAGlD,EAAMuC,IAAK,GAE3BsB,GAAQ7D,EAAMuC,IAAI,GAClBuB,GAAQ9D,EAAMuC,IAAI,GAClB,IAAIyB,EAAIzF,EAAM0F,WAAWJ,EAAMC,GAC3BI,EAAI3F,EAAM4F,QAAQH,GAElBI,EAAIlB,EACRA,GAAKC,EAAIe,KAAO,EAChBf,EAAIiB,EAIN7F,EAAM8F,IAAInB,EAAGC,EAAG9C,EAAKgB,K,iCC1IvB,IAAIzC,EAAS,EAAQ,MACjBC,EAAW,EAAQ,MAEnBL,EAAS,EAAQ,MACjBC,EAAM,EAAQ,KAElB,SAAS6F,EAAS5D,EAAMb,GACtBjB,EAAOK,MAAMY,EAAIX,OAAQ,GAAI,sBAE7B,IAAIqF,EAAK1E,EAAI6D,MAAM,EAAG,GAClBc,EAAK3E,EAAI6D,MAAM,EAAG,IAClBe,EAAK5E,EAAI6D,MAAM,GAAI,IAGrBvE,KAAKuF,QADM,YAAThE,EACa,CACbjC,EAAIsB,OAAO,CAAEW,KAAM,UAAWb,IAAK0E,IACnC9F,EAAIsB,OAAO,CAAEW,KAAM,UAAWb,IAAK2E,IACnC/F,EAAIsB,OAAO,CAAEW,KAAM,UAAWb,IAAK4E,KAGtB,CACbhG,EAAIsB,OAAO,CAAEW,KAAM,UAAWb,IAAK4E,IACnChG,EAAIsB,OAAO,CAAEW,KAAM,UAAWb,IAAK2E,IACnC/F,EAAIsB,OAAO,CAAEW,KAAM,UAAWb,IAAK0E,KAKzC,SAAS5F,EAAIa,GACXhB,EAAOiB,KAAKN,KAAMK,GAElB,IAAIQ,EAAQ,IAAIsE,EAASnF,KAAKuB,KAAMvB,KAAKK,QAAQK,KACjDV,KAAKwF,UAAY3E,EAEnBnB,EAASF,EAAKH,GAEduC,EAAOzC,QAAUK,EAEjBA,EAAIoB,OAAS,SAAgBP,GAC3B,OAAO,IAAIb,EAAIa,IAGjBb,EAAImB,UAAUI,QAAU,SAAiBC,EAAKC,EAAOC,EAAKC,GACxD,IAAIN,EAAQb,KAAKwF,UAEjB3E,EAAM0E,QAAQ,GAAGxE,QAAQC,EAAKC,EAAOC,EAAKC,GAC1CN,EAAM0E,QAAQ,GAAGxE,QAAQG,EAAKC,EAAQD,EAAKC,GAC3CN,EAAM0E,QAAQ,GAAGxE,QAAQG,EAAKC,EAAQD,EAAKC,IAG7C3B,EAAImB,UAAUsC,KAAO3D,EAAIqB,UAAUsC,KACnCzD,EAAImB,UAAUuC,OAAS5D,EAAIqB,UAAUuC,Q,gCCnDrC/D,EAAQsE,aAAe,SAAsBgC,EAAOvD,GAClD,IAAIwD,EAAQD,EAAM,EAAIvD,IAAQ,GAClBuD,EAAM,EAAIvD,IAAQ,GAClBuD,EAAM,EAAIvD,IAAQ,EACnBuD,EAAM,EAAIvD,GACrB,OAAOwD,IAAQ,GAGjBvG,EAAQiF,cAAgB,SAAuBqB,EAAOpB,EAAOnC,GAC3DuD,EAAM,EAAIvD,GAAOmC,IAAU,GAC3BoB,EAAM,EAAIvD,GAAQmC,IAAU,GAAM,IAClCoB,EAAM,EAAIvD,GAAQmC,IAAU,EAAK,IACjCoB,EAAM,EAAIvD,GAAe,IAARmC,GAGnBlF,EAAQ8E,GAAK,SAAY0B,EAAKC,EAAK1E,EAAKgB,GAItC,IAHA,IAAI2D,EAAO,EACPC,EAAO,EAEF5F,EAAI,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAC9B,IAAK,IAAI6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BF,IAAS,EACTA,GAASD,IAASG,EAAI7F,EAAM,EAE9B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BF,IAAS,EACTA,GAASF,IAASI,EAAI7F,EAAM,EAIhC,IAASA,EAAI,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAC9B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BD,IAAS,EACTA,GAASF,IAASG,EAAI7F,EAAM,EAE9B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BD,IAAS,EACTA,GAASH,IAASI,EAAI7F,EAAM,EAIhCgB,EAAIgB,EAAM,GAAK2D,IAAS,EACxB3E,EAAIgB,EAAM,GAAK4D,IAAS,GAG1B3G,EAAQ+F,IAAM,SAAaS,EAAKC,EAAK1E,EAAKgB,GAIxC,IAHA,IAAI2D,EAAO,EACPC,EAAO,EAEF5F,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAI6F,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAC5BF,IAAS,EACTA,GAASD,IAASG,EAAI7F,EAAM,EAC5B2F,IAAS,EACTA,GAASF,IAASI,EAAI7F,EAAM,EAGhC,IAASA,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAS6F,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAC5BD,IAAS,EACTA,GAASF,IAASG,EAAI7F,EAAM,EAC5B4F,IAAS,EACTA,GAASH,IAASI,EAAI7F,EAAM,EAIhCgB,EAAIgB,EAAM,GAAK2D,IAAS,EACxB3E,EAAIgB,EAAM,GAAK4D,IAAS,GAG1B3G,EAAQwE,IAAM,SAAagC,EAAKC,EAAK1E,EAAKgB,GAQxC,IAPA,IAAI2D,EAAO,EACPC,EAAO,EAMF5F,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAK,IAAI6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BF,IAAS,EACTA,GAASD,GAAQG,EAAI7F,EAAM,EAE7B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BF,IAAS,EACTA,GAASF,GAAQI,EAAI7F,EAAM,EAG/B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BF,IAAS,EACTA,GAASD,GAAQG,EAAI7F,EAAM,EAO7B,IAASA,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BD,IAAS,EACTA,GAASF,GAAQG,EAAI7F,EAAM,EAE7B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BD,IAAS,EACTA,GAASH,GAAQI,EAAI7F,EAAM,EAG/B,IAAS6F,EAAI,EAAGA,GAAK,GAAIA,GAAK,EAC5BD,IAAS,EACTA,GAASH,GAAQI,EAAI7F,EAAM,EAG7BgB,EAAIgB,EAAM,GAAK2D,IAAS,EACxB3E,EAAIgB,EAAM,GAAK4D,IAAS,GAG1B3G,EAAQ0E,OAAS,SAAgBmC,EAAKpC,GACpC,OAASoC,GAAOpC,EAAS,UAAcoC,IAAS,GAAKpC,GAGvD,IAAIqC,EAAW,CAEb,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAC3B,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GACzB,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAGzB,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GACzB,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EACzB,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAG5B9G,EAAQ2E,IAAM,SAAa6B,EAAKC,EAAK1E,EAAKgB,GAKxC,IAJA,IAAI2D,EAAO,EACPC,EAAO,EAEPI,EAAMD,EAASlG,SAAW,EACrBG,EAAI,EAAGA,EAAIgG,EAAKhG,IACvB2F,IAAS,EACTA,GAASF,IAAQM,EAAS/F,GAAM,EAElC,IAASA,EAAIgG,EAAKhG,EAAI+F,EAASlG,OAAQG,IACrC4F,IAAS,EACTA,GAASF,IAAQK,EAAS/F,GAAM,EAGlCgB,EAAIgB,EAAM,GAAK2D,IAAS,EACxB3E,EAAIgB,EAAM,GAAK4D,IAAS,GAG1B3G,EAAQyF,OAAS,SAAgBZ,EAAG9C,EAAKgB,GACvC,IAAI2D,EAAO,EACPC,EAAO,EAEXD,GAAa,EAAJ7B,IAAU,EAAMA,IAAM,GAC/B,IAAK,IAAI9D,EAAI,GAAIA,GAAK,GAAIA,GAAK,EAC7B2F,IAAS,EACTA,GAAS7B,IAAM9D,EAAK,GAEtB,IAASA,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAC5B4F,GAAS9B,IAAM9D,EAAK,GACpB4F,IAAS,EAEXA,IAAc,GAAJ9B,IAAa,EAAMA,IAAM,GAEnC9C,EAAIgB,EAAM,GAAK2D,IAAS,EACxB3E,EAAIgB,EAAM,GAAK4D,IAAS,GAG1B,IAAIK,EAAS,CACX,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EACpD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClD,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAClD,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAEnD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EACnD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EACpD,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAElD,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GACjD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EACpD,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EACjD,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAEpD,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EACnD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EACpD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAEjD,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAClD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GACnD,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAElD,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EACnD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAClD,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAElD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnD,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAClD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EACpD,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAEjD,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EACnD,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EACnD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAClD,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGpDhH,EAAQ2F,WAAa,SAAoBa,EAAKC,GAE5C,IADA,IAAI1E,EAAM,EACDhB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIkG,EAAKT,IAAS,GAAS,EAAJzF,EAAU,GAC7BmG,EAAKF,EAAW,GAAJjG,EAAWkG,GAE3BlF,IAAQ,EACRA,GAAOmF,EAET,IAASnG,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACtBkG,EAAKR,IAAS,GAAS,EAAJ1F,EAAU,GAC7BmG,EAAKF,EAAO,IAAe,GAAJjG,EAAWkG,GAEtClF,IAAQ,EACRA,GAAOmF,EAET,OAAOnF,IAAQ,GAGjB,IAAIoF,EAAe,CACjB,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GACvD,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAG1DnH,EAAQ6F,QAAU,SAAiBgB,GAEjC,IADA,IAAI9E,EAAM,EACDhB,EAAI,EAAGA,EAAIoG,EAAavG,OAAQG,IACvCgB,IAAQ,EACRA,GAAQ8E,IAAQM,EAAapG,GAAM,EAErC,OAAOgB,IAAQ,GAGjB/B,EAAQoH,SAAW,SAAkBP,EAAKQ,EAAMC,GAC9C,IAAIC,EAAMV,EAAIW,SAAS,GACvB,MAAOD,EAAI3G,OAASyG,EAClBE,EAAM,IAAMA,EAGd,IADA,IAAIxF,EAAM,GACDhB,EAAI,EAAGA,EAAIsG,EAAMtG,GAAKuG,EAC7BvF,EAAI0F,KAAKF,EAAInC,MAAMrE,EAAGA,EAAIuG,IAC5B,OAAOvF,EAAI2F,KAAK,O,6CC9PdC,EAAgB,EAAQ,MACxBC,EAAS,EAAQ,MAEjBC,EAAK,EAAQ,MAEjB,SAASC,EAAkBC,GACzB,IAAIC,EAAQ,IAAIC,EAAOL,EAAOG,GAAKC,MAAO,OACtCE,EAAM,IAAID,EAAOL,EAAOG,GAAKG,IAAK,OAEtC,OAAO,IAAIL,EAAGG,EAAOE,GAGvB,IAAIC,EAAY,CACd,QAAU,EAAM,KAAO,EAAM,QAAU,GAGzC,SAASC,EAAqBJ,EAAOK,EAAKC,EAAWC,GACnD,OAAIN,EAAOO,SAASH,SAA2BI,IAAnBN,EAAUE,GAC7BD,EAAoBJ,EAAO,SAAUK,EAAKC,IAGnDD,EAAMA,GAAO,SACbE,EAAOA,GAAQ,SACfD,EAAYA,GAAa,IAAIL,EAAO,CAAC,IAEhCA,EAAOO,SAASF,KACnBA,EAAY,IAAIL,EAAOK,EAAWC,IAGf,kBAAVP,EACF,IAAIH,EAAGF,EAAcK,EAAOM,GAAYA,GAAW,IAGvDL,EAAOO,SAASR,KACnBA,EAAQ,IAAIC,EAAOD,EAAOK,IAGrB,IAAIR,EAAGG,EAAOM,GAAW,KAGlCtI,EAAQ0I,mBAAqB1I,EAAQ2I,yBAA2B3I,EAAQ8H,iBAAmBA,EAC3F9H,EAAQoI,oBAAsBpI,EAAQ4I,cAAgBR,G,6CCzClDS,EAAK,EAAQ,MACbC,EAAc,EAAQ,MACtBC,EAAc,IAAID,EAClBE,EAAa,IAAIH,EAAG,IACpBI,EAAS,IAAIJ,EAAG,IAChBK,EAAM,IAAIL,EAAG,IACbM,EAAQ,IAAIN,EAAG,GACfO,EAAQ,IAAIP,EAAG,GACfjB,EAAS,EAAQ,MACjByB,EAAc,EAAQ,MAG1B,SAASC,EAAaC,EAAKlB,GAMzB,OALAA,EAAMA,GAAO,OACRJ,EAAOO,SAASe,KACnBA,EAAM,IAAItB,EAAOsB,EAAKlB,IAExBxH,KAAK2I,KAAO,IAAIX,EAAGU,GACZ1I,KAGT,SAAS4I,EAAcC,EAAMrB,GAM3B,OALAA,EAAMA,GAAO,OACRJ,EAAOO,SAASkB,KACnBA,EAAO,IAAIzB,EAAOyB,EAAMrB,IAE1BxH,KAAK8I,MAAQ,IAAId,EAAGa,GACb7I,KAjBT4B,EAAOzC,QAAU6H,EAoBjB,IAAI+B,EAAa,GACjB,SAASC,EAAW7B,EAAOM,GACzB,IAAIJ,EAAMI,EAAUd,SAAS,OACzBsC,EAAM,CAAC5B,EAAKF,EAAMR,SAAS,KAAKE,KAAK,KACzC,GAAIoC,KAAOF,EACT,OAAOA,EAAWE,GAEpB,IAyBIC,EAzBAC,EAAQ,EAEZ,GAAIhC,EAAMiC,WACPrC,EAAOsC,cACPtC,EAAOuC,WAAWnC,KAClBe,EAAYqB,KAAKpC,GAclB,OAZAgC,GAAS,EAKPA,GAHU,OAAR9B,GAAwB,OAARA,EAGT,EAIA,EAEX0B,EAAWE,GAAOE,EACXA,EAOT,OALKjB,EAAYqB,KAAKpC,EAAMqC,KAAK,MAE/BL,GAAS,GAGH9B,GACN,IAAK,KACCF,EAAMD,IAAIiB,GAAYsB,IAAIrB,KAE5Be,GAAS,GAEX,MACF,IAAK,KACHD,EAAM/B,EAAMD,IAAImB,GACZa,EAAIO,IAAInB,IAAUY,EAAIO,IAAIlB,KAE5BY,GAAS,GAEX,MACF,QACEA,GAAS,EAGb,OADAJ,EAAWE,GAAOE,EACXA,EAGT,SAASnC,EAAGG,EAAOM,EAAWiC,GAC5B1J,KAAK2J,aAAalC,GAClBzH,KAAK4J,QAAU,IAAI5B,EAAGb,GACtBnH,KAAK6J,OAAS7B,EAAG8B,KAAK9J,KAAK4J,SAC3B5J,KAAK+J,UAAY5C,EAAMpH,OACvBC,KAAK2I,UAAOf,EACZ5H,KAAK8I,WAAQlB,EACb5H,KAAKgK,gBAAapC,EACd8B,GACF1J,KAAKyI,aAAeA,EACpBzI,KAAK4I,cAAgBA,GAErB5I,KAAKgK,WAAa,EA4DtB,SAASC,EAAkBC,EAAI1C,GAC7B,IAAI2C,EAAM,IAAI/C,EAAO8C,EAAGE,WACxB,OAAK5C,EAGI2C,EAAIxD,SAASa,GAFb2C,EA5DX1J,OAAO4J,eAAerD,EAAGrG,UAAW,cAAe,CACjD2J,YAAY,EACZC,IAAK,WAIH,MAH+B,kBAApBvK,KAAKgK,aACdhK,KAAKgK,WAAahB,EAAWhJ,KAAK4J,QAAS5J,KAAKwK,QAE3CxK,KAAKgK,cAGhBhD,EAAGrG,UAAU8J,aAAe,WAK1B,OAJKzK,KAAK8I,QACR9I,KAAK8I,MAAQ,IAAId,EAAGQ,EAAYxI,KAAK+J,aAEvC/J,KAAK2I,KAAO3I,KAAK0K,KAAKC,MAAM3K,KAAK6J,QAAQe,OAAO5K,KAAK8I,OAAO+B,UACrD7K,KAAK8K,gBAGd9D,EAAGrG,UAAUoK,cAAgB,SAAUC,GACrCA,EAAQ,IAAIhD,EAAGgD,GACfA,EAAQA,EAAML,MAAM3K,KAAK6J,QACzB,IAAIoB,EAASD,EAAMJ,OAAO5K,KAAK8I,OAAO+B,UAClC3J,EAAM,IAAIkG,EAAO6D,EAAOb,WACxBjD,EAAQnH,KAAKkL,WACjB,GAAIhK,EAAInB,OAASoH,EAAMpH,OAAQ,CAC7B,IAAIoL,EAAQ,IAAI/D,EAAOD,EAAMpH,OAASmB,EAAInB,QAC1CoL,EAAMC,KAAK,GACXlK,EAAMkG,EAAOpE,OAAO,CAACmI,EAAOjK,IAE9B,OAAOA,GAGT8F,EAAGrG,UAAUmK,aAAe,SAAsBtD,GAChD,OAAOyC,EAAkBjK,KAAK2I,KAAMnB,IAGtCR,EAAGrG,UAAU0K,cAAgB,SAAuB7D,GAClD,OAAOyC,EAAkBjK,KAAK8I,MAAOtB,IAGvCR,EAAGrG,UAAUuK,SAAW,SAAU1D,GAChC,OAAOyC,EAAkBjK,KAAK4J,QAASpC,IAGzCR,EAAGrG,UAAU2K,aAAe,SAAU9D,GACpC,OAAOyC,EAAkBjK,KAAK0K,KAAMlD,IAGtCR,EAAGrG,UAAUgJ,aAAe,SAAUtC,EAAKG,GAOzC,OANAA,EAAMA,GAAO,OACRJ,EAAOO,SAASN,KACnBA,EAAM,IAAID,EAAOC,EAAKG,IAExBxH,KAAKwK,MAAQnD,EACbrH,KAAK0K,KAAO,IAAI1C,EAAGX,GACZrH,O,qBCzJT,IAAIwI,EAAc,EAAQ,MAC1B5G,EAAOzC,QAAUoM,EACjBA,EAAUlC,YAAcA,EACxBkC,EAAUjC,WAAaA,EACvB,IAAItB,EAAK,EAAQ,MACbG,EAAa,IAAIH,EAAG,IACpBC,EAAc,EAAQ,MACtBC,EAAc,IAAID,EAClBuD,EAAM,IAAIxD,EAAG,GACbyD,EAAM,IAAIzD,EAAG,GACb0D,EAAO,IAAI1D,EAAG,GAGdK,GAFU,IAAIL,EAAG,IACT,IAAIA,EAAG,GACT,IAAIA,EAAG,KACbM,EAAQ,IAAIN,EAAG,GAEfI,GADQ,IAAIJ,EAAG,GACN,IAAIA,EAAG,KAChB2D,EAAO,IAAI3D,EAAG,GAEdjB,GADS,IAAIiB,EAAG,IACP,MAEb,SAAS4D,IACP,GAAe,OAAX7E,EACF,OAAOA,EAET,IAAI8E,EAAQ,QACRnG,EAAM,GACVA,EAAI,GAAK,EACT,IAAK,IAAIxF,EAAI,EAAG4L,EAAI,EAAGA,EAAID,EAAOC,GAAK,EAAG,CAExC,IADA,IAAIC,EAAO3J,KAAKM,KAAKN,KAAK2J,KAAKD,IACtB/F,EAAI,EAAGA,EAAI7F,GAAKwF,EAAIK,IAAMgG,EAAMhG,IACvC,GAAI+F,EAAIpG,EAAIK,KAAO,EACjB,MAEA7F,IAAM6F,GAAKL,EAAIK,IAAMgG,IAGzBrG,EAAIxF,KAAO4L,GAGb,OADA/E,EAASrB,EACFA,EAGT,SAAS2D,EAAY2C,GAGnB,IAFA,IAAIjF,EAAS6E,IAEJ1L,EAAI,EAAGA,EAAI6G,EAAOhH,OAAQG,IACjC,GAA0B,IAAtB8L,EAAEC,KAAKlF,EAAO7G,IAChB,OAA0B,IAAtB8L,EAAEE,KAAKnF,EAAO7G,IAOtB,OAAO,EAGT,SAASoJ,EAAW0C,GAClB,IAAIG,EAAMnE,EAAG8B,KAAKkC,GAClB,OAA8D,IAAvDP,EAAId,MAAMwB,GAAKvB,OAAOoB,EAAEI,KAAK,IAAIvB,UAAUqB,KAAK,GAGzD,SAASX,EAAUc,EAAMhF,GACvB,GAAIgF,EAAO,GAET,OACS,IAAIrE,EADD,IAARX,GAAqB,IAARA,EACD,CAAC,IAAM,KAEP,CAAC,IAAM,KAKzB,IAAIrB,EAAKsG,EAFTjF,EAAM,IAAIW,EAAGX,GAIb,MAAO,EAAM,CACXrB,EAAM,IAAIgC,EAAGQ,EAAYpG,KAAKM,KAAK2J,EAAO,KAC1C,MAAOrG,EAAIuG,YAAcF,EACvBrG,EAAIwG,MAAM,GAQZ,GANIxG,EAAIoD,UACNpD,EAAIyG,KAAKjB,GAENxF,EAAI0G,MAAM,IACb1G,EAAIyG,KAAKhB,GAENpE,EAAIoC,IAAIgC,IAIN,IAAKpE,EAAIoC,IAAIiC,GAClB,MAAO1F,EAAIkB,IAAImB,GAAKoB,IAAInB,GACtBtC,EAAIyG,KAAKd,QALX,MAAO3F,EAAIkB,IAAIiB,GAAYsB,IAAIrB,GAC7BpC,EAAIyG,KAAKd,GAQb,GADAW,EAAKtG,EAAIwD,KAAK,GACVH,EAAYiD,IAAOjD,EAAYrD,IACjCsD,EAAWgD,IAAOhD,EAAWtD,IAC7BkC,EAAYqB,KAAK+C,IAAOpE,EAAYqB,KAAKvD,GACzC,OAAOA,K,gCCpGb,SAAWpE,EAAQzC,GACjB,aAGA,SAASM,EAAQkN,EAAKC,GACpB,IAAKD,EAAK,MAAM,IAAIE,MAAMD,GAAO,oBAKnC,SAASlN,EAAUoN,EAAMC,GACvBD,EAAKxL,OAASyL,EACd,IAAIC,EAAW,aACfA,EAASrM,UAAYoM,EAAUpM,UAC/BmM,EAAKnM,UAAY,IAAIqM,EACrBF,EAAKnM,UAAUU,YAAcyL,EAK/B,SAAS9E,EAAIiF,EAAQC,EAAMC,GACzB,GAAInF,EAAGoF,KAAKH,GACV,OAAOA,EAGTjN,KAAKqN,SAAW,EAChBrN,KAAKsN,MAAQ,KACbtN,KAAKD,OAAS,EAGdC,KAAKmM,IAAM,KAEI,OAAXc,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTlN,KAAKyB,MAAMwL,GAAU,EAAGC,GAAQ,GAAIC,GAAU,OAYlD,IAAI/F,EATkB,kBAAXxF,EACTA,EAAOzC,QAAU6I,EAEjB7I,EAAQ6I,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGuF,SAAW,GAGd,IAEInG,EADoB,qBAAXoG,QAAmD,qBAAlBA,OAAOpG,OACxCoG,OAAOpG,OAEP,eAEX,MAAOqG,IAgIT,SAASC,EAAeC,EAAQC,GAC9B,IAAIC,EAAIF,EAAOG,WAAWF,GAE1B,OAAIC,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,GAGHA,EAAI,GAAM,GAItB,SAASE,EAAcJ,EAAQK,EAAYJ,GACzC,IAAI5J,EAAI0J,EAAcC,EAAQC,GAI9B,OAHIA,EAAQ,GAAKI,IACfhK,GAAK0J,EAAcC,EAAQC,EAAQ,IAAM,GAEpC5J,EA8CT,SAASiK,EAAWvH,EAAKwH,EAAOC,EAAKC,GAGnC,IAFA,IAAIpK,EAAI,EACJkC,EAAM9D,KAAKD,IAAIuE,EAAI3G,OAAQoO,GACtBjO,EAAIgO,EAAOhO,EAAIgG,EAAKhG,IAAK,CAChC,IAAI2N,EAAInH,EAAIoH,WAAW5N,GAAK,GAE5B8D,GAAKoK,EAIHpK,GADE6J,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,OAAO7J,EAnNTgE,EAAGoF,KAAO,SAAepH,GACvB,OAAIA,aAAegC,GAIJ,OAARhC,GAA+B,kBAARA,GAC5BA,EAAI3E,YAAYkM,WAAavF,EAAGuF,UAAYtN,MAAMoO,QAAQrI,EAAIsH,QAGlEtF,EAAGvF,IAAM,SAAc6L,EAAMC,GAC3B,OAAID,EAAK7E,IAAI8E,GAAS,EAAUD,EACzBC,GAGTvG,EAAG7F,IAAM,SAAcmM,EAAMC,GAC3B,OAAID,EAAK7E,IAAI8E,GAAS,EAAUD,EACzBC,GAGTvG,EAAGrH,UAAUc,MAAQ,SAAewL,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOjN,KAAKwO,YAAYvB,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOjN,KAAKyO,WAAWxB,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETzN,EAAOyN,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAEnDD,EAASA,EAAOtG,WAAW+H,QAAQ,OAAQ,IAC3C,IAAIR,EAAQ,EACM,MAAdjB,EAAO,KACTiB,IACAlO,KAAKqN,SAAW,GAGda,EAAQjB,EAAOlN,SACJ,KAATmN,EACFlN,KAAK2O,UAAU1B,EAAQiB,EAAOf,IAE9BnN,KAAK4O,WAAW3B,EAAQC,EAAMgB,GACf,OAAXf,GACFnN,KAAKyO,WAAWzO,KAAKoK,UAAW8C,EAAMC,MAM9CnF,EAAGrH,UAAU6N,YAAc,SAAsBvB,EAAQC,EAAMC,GACzDF,EAAS,IACXjN,KAAKqN,SAAW,EAChBJ,GAAUA,GAERA,EAAS,UACXjN,KAAKsN,MAAQ,CAAW,SAATL,GACfjN,KAAKD,OAAS,GACLkN,EAAS,kBAClBjN,KAAKsN,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,UAEzBjN,KAAKD,OAAS,IAEdN,EAAOwN,EAAS,kBAChBjN,KAAKsN,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,SACvB,GAEFjN,KAAKD,OAAS,GAGD,OAAXoN,GAGJnN,KAAKyO,WAAWzO,KAAKoK,UAAW8C,EAAMC,IAGxCnF,EAAGrH,UAAU8N,WAAa,SAAqBxB,EAAQC,EAAMC,GAG3D,GADA1N,EAAgC,kBAAlBwN,EAAOlN,QACjBkN,EAAOlN,QAAU,EAGnB,OAFAC,KAAKsN,MAAQ,CAAE,GACftN,KAAKD,OAAS,EACPC,KAGTA,KAAKD,OAASqC,KAAKM,KAAKuK,EAAOlN,OAAS,GACxCC,KAAKsN,MAAQ,IAAIrN,MAAMD,KAAKD,QAC5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAC/BF,KAAKsN,MAAMpN,GAAK,EAGlB,IAAI6F,EAAG8I,EACH3M,EAAM,EACV,GAAe,OAAXiL,EACF,IAAKjN,EAAI+M,EAAOlN,OAAS,EAAGgG,EAAI,EAAG7F,GAAK,EAAGA,GAAK,EAC9C2O,EAAI5B,EAAO/M,GAAM+M,EAAO/M,EAAI,IAAM,EAAM+M,EAAO/M,EAAI,IAAM,GACzDF,KAAKsN,MAAMvH,IAAO8I,GAAK3M,EAAO,SAC9BlC,KAAKsN,MAAMvH,EAAI,GAAM8I,IAAO,GAAK3M,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACP6D,UAGC,GAAe,OAAXoH,EACT,IAAKjN,EAAI,EAAG6F,EAAI,EAAG7F,EAAI+M,EAAOlN,OAAQG,GAAK,EACzC2O,EAAI5B,EAAO/M,GAAM+M,EAAO/M,EAAI,IAAM,EAAM+M,EAAO/M,EAAI,IAAM,GACzDF,KAAKsN,MAAMvH,IAAO8I,GAAK3M,EAAO,SAC9BlC,KAAKsN,MAAMvH,EAAI,GAAM8I,IAAO,GAAK3M,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACP6D,KAIN,OAAO/F,KAAK8O,SAyBd9G,EAAGrH,UAAUgO,UAAY,SAAoB1B,EAAQiB,EAAOf,GAE1DnN,KAAKD,OAASqC,KAAKM,MAAMuK,EAAOlN,OAASmO,GAAS,GAClDlO,KAAKsN,MAAQ,IAAIrN,MAAMD,KAAKD,QAC5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAC/BF,KAAKsN,MAAMpN,GAAK,EAIlB,IAGI2O,EAHA3M,EAAM,EACN6D,EAAI,EAGR,GAAe,OAAXoH,EACF,IAAKjN,EAAI+M,EAAOlN,OAAS,EAAGG,GAAKgO,EAAOhO,GAAK,EAC3C2O,EAAId,EAAad,EAAQiB,EAAOhO,IAAMgC,EACtClC,KAAKsN,MAAMvH,IAAU,SAAJ8I,EACb3M,GAAO,IACTA,GAAO,GACP6D,GAAK,EACL/F,KAAKsN,MAAMvH,IAAM8I,IAAM,IAEvB3M,GAAO,MAGN,CACL,IAAI6M,EAAc9B,EAAOlN,OAASmO,EAClC,IAAKhO,EAAI6O,EAAc,IAAM,EAAIb,EAAQ,EAAIA,EAAOhO,EAAI+M,EAAOlN,OAAQG,GAAK,EAC1E2O,EAAId,EAAad,EAAQiB,EAAOhO,IAAMgC,EACtClC,KAAKsN,MAAMvH,IAAU,SAAJ8I,EACb3M,GAAO,IACTA,GAAO,GACP6D,GAAK,EACL/F,KAAKsN,MAAMvH,IAAM8I,IAAM,IAEvB3M,GAAO,EAKblC,KAAK8O,SA2BP9G,EAAGrH,UAAUiO,WAAa,SAAqB3B,EAAQC,EAAMgB,GAE3DlO,KAAKsN,MAAQ,CAAE,GACftN,KAAKD,OAAS,EAGd,IAAK,IAAIiP,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW/B,EAClE8B,IAEFA,IACAC,EAAWA,EAAU/B,EAAQ,EAO7B,IALA,IAAIgC,EAAQjC,EAAOlN,OAASmO,EACxBhH,EAAMgI,EAAQF,EACdb,EAAM/L,KAAKD,IAAI+M,EAAOA,EAAQhI,GAAOgH,EAErCiB,EAAO,EACFjP,EAAIgO,EAAOhO,EAAIiO,EAAKjO,GAAK8O,EAChCG,EAAOlB,EAAUhB,EAAQ/M,EAAGA,EAAI8O,EAAS9B,GAEzClN,KAAKoP,MAAMH,GACPjP,KAAKsN,MAAM,GAAK6B,EAAO,SACzBnP,KAAKsN,MAAM,IAAM6B,EAEjBnP,KAAKqP,OAAOF,GAIhB,GAAY,IAARjI,EAAW,CACb,IAAIoI,EAAM,EAGV,IAFAH,EAAOlB,EAAUhB,EAAQ/M,EAAG+M,EAAOlN,OAAQmN,GAEtChN,EAAI,EAAGA,EAAIgH,EAAKhH,IACnBoP,GAAOpC,EAGTlN,KAAKoP,MAAME,GACPtP,KAAKsN,MAAM,GAAK6B,EAAO,SACzBnP,KAAKsN,MAAM,IAAM6B,EAEjBnP,KAAKqP,OAAOF,GAIhBnP,KAAK8O,SAGP9G,EAAGrH,UAAU4O,KAAO,SAAeC,GACjCA,EAAKlC,MAAQ,IAAIrN,MAAMD,KAAKD,QAC5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAC/BsP,EAAKlC,MAAMpN,GAAKF,KAAKsN,MAAMpN,GAE7BsP,EAAKzP,OAASC,KAAKD,OACnByP,EAAKnC,SAAWrN,KAAKqN,SACrBmC,EAAKrD,IAAMnM,KAAKmM,KAGlBnE,EAAGrH,UAAU8O,MAAQ,WACnB,IAAIzL,EAAI,IAAIgE,EAAG,MAEf,OADAhI,KAAKuP,KAAKvL,GACHA,GAGTgE,EAAGrH,UAAU+O,QAAU,SAAkBlJ,GACvC,MAAOxG,KAAKD,OAASyG,EACnBxG,KAAKsN,MAAMtN,KAAKD,UAAY,EAE9B,OAAOC,MAITgI,EAAGrH,UAAUmO,MAAQ,WACnB,MAAO9O,KAAKD,OAAS,GAAqC,IAAhCC,KAAKsN,MAAMtN,KAAKD,OAAS,GACjDC,KAAKD,SAEP,OAAOC,KAAK2P,aAGd3H,EAAGrH,UAAUgP,UAAY,WAKvB,OAHoB,IAAhB3P,KAAKD,QAAkC,IAAlBC,KAAKsN,MAAM,KAClCtN,KAAKqN,SAAW,GAEXrN,MAGTgI,EAAGrH,UAAUiP,QAAU,WACrB,OAAQ5P,KAAKmM,IAAM,UAAY,SAAWnM,KAAK2G,SAAS,IAAM,KAiChE,IAAIkJ,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAyM9D,SAASC,EAAYhK,GAGnB,IAFA,IAAI6I,EAAI,IAAI5O,MAAM+F,EAAIuG,aAEb0D,EAAM,EAAGA,EAAMpB,EAAE9O,OAAQkQ,IAAO,CACvC,IAAI/N,EAAO+N,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBpB,EAAEoB,IAAQjK,EAAIsH,MAAMpL,GAAQ,GAAKgO,KAAWA,EAG9C,OAAOrB,EAmWT,SAASsB,EAAYC,EAAMpK,EAAK9E,GAC9BA,EAAImM,SAAWrH,EAAIqH,SAAW+C,EAAK/C,SACnC,IAAInH,EAAOkK,EAAKrQ,OAASiG,EAAIjG,OAAU,EACvCmB,EAAInB,OAASmG,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAImK,EAAoB,EAAhBD,EAAK9C,MAAM,GACflH,EAAmB,EAAfJ,EAAIsH,MAAM,GACdtJ,EAAIqM,EAAIjK,EAERkK,EAAS,SAAJtM,EACLuM,EAASvM,EAAI,SAAa,EAC9B9C,EAAIoM,MAAM,GAAKgD,EAEf,IAAK,IAAIxE,EAAI,EAAGA,EAAI5F,EAAK4F,IAAK,CAM5B,IAHA,IAAI0E,EAASD,IAAU,GACnBE,EAAgB,SAARF,EACRG,EAAOtO,KAAKD,IAAI2J,EAAG9F,EAAIjG,OAAS,GAC3BgG,EAAI3D,KAAKK,IAAI,EAAGqJ,EAAIsE,EAAKrQ,OAAS,GAAIgG,GAAK2K,EAAM3K,IAAK,CAC7D,IAAI7F,EAAK4L,EAAI/F,EAAK,EAClBsK,EAAoB,EAAhBD,EAAK9C,MAAMpN,GACfkG,EAAmB,EAAfJ,EAAIsH,MAAMvH,GACd/B,EAAIqM,EAAIjK,EAAIqK,EACZD,GAAWxM,EAAI,SAAa,EAC5ByM,EAAY,SAAJzM,EAEV9C,EAAIoM,MAAMxB,GAAa,EAAR2E,EACfF,EAAiB,EAATC,EAQV,OANc,IAAVD,EACFrP,EAAIoM,MAAMxB,GAAa,EAARyE,EAEfrP,EAAInB,SAGCmB,EAAI4N,QAzlBb9G,EAAGrH,UAAUgG,SAAW,SAAmBuG,EAAMyD,GAI/C,IAAIzP,EACJ,GAJAgM,EAAOA,GAAQ,GACfyD,EAAoB,EAAVA,GAAe,EAGZ,KAATzD,GAAwB,QAATA,EAAgB,CACjChM,EAAM,GAGN,IAFA,IAAIgB,EAAM,EACNqO,EAAQ,EACHrQ,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAAK,CACpC,IAAI2O,EAAI7O,KAAKsN,MAAMpN,GACfiP,GAA+B,UAArBN,GAAK3M,EAAOqO,IAAmB5J,SAAS,IACtD4J,EAAS1B,IAAO,GAAK3M,EAAQ,SAE3BhB,EADY,IAAVqP,GAAerQ,IAAMF,KAAKD,OAAS,EAC/B8P,EAAM,EAAIV,EAAKpP,QAAUoP,EAAOjO,EAEhCiO,EAAOjO,EAEfgB,GAAO,EACHA,GAAO,KACTA,GAAO,GACPhC,KAGU,IAAVqQ,IACFrP,EAAMqP,EAAM5J,SAAS,IAAMzF,GAE7B,MAAOA,EAAInB,OAAS4Q,IAAY,EAC9BzP,EAAM,IAAMA,EAKd,OAHsB,IAAlBlB,KAAKqN,WACPnM,EAAM,IAAMA,GAEPA,EAGT,GAAIgM,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI0D,EAAYd,EAAW5C,GAEvB2D,EAAYd,EAAW7C,GAC3BhM,EAAM,GACN,IAAI2M,EAAI7N,KAAKyP,QACb5B,EAAER,SAAW,EACb,OAAQQ,EAAEiD,SAAU,CAClB,IAAI9M,EAAI6J,EAAE5B,KAAK4E,GAAWlK,SAASuG,GACnCW,EAAIA,EAAEkD,MAAMF,GAKV3P,EAHG2M,EAAEiD,SAGC9M,EAAI9C,EAFJ2O,EAAMe,EAAY5M,EAAEjE,QAAUiE,EAAI9C,EAKxClB,KAAK8Q,WACP5P,EAAM,IAAMA,GAEd,MAAOA,EAAInB,OAAS4Q,IAAY,EAC9BzP,EAAM,IAAMA,EAKd,OAHsB,IAAlBlB,KAAKqN,WACPnM,EAAM,IAAMA,GAEPA,EAGTzB,GAAO,EAAO,oCAGhBuI,EAAGrH,UAAUqQ,SAAW,WACtB,IAAIC,EAAMjR,KAAKsN,MAAM,GASrB,OARoB,IAAhBtN,KAAKD,OACPkR,GAAuB,SAAhBjR,KAAKsN,MAAM,GACO,IAAhBtN,KAAKD,QAAkC,IAAlBC,KAAKsN,MAAM,GAEzC2D,GAAO,iBAAoC,SAAhBjR,KAAKsN,MAAM,GAC7BtN,KAAKD,OAAS,GACvBN,GAAO,EAAO,8CAEU,IAAlBO,KAAKqN,UAAmB4D,EAAMA,GAGxCjJ,EAAGrH,UAAUuQ,OAAS,WACpB,OAAOlR,KAAK2G,SAAS,KAGvBqB,EAAGrH,UAAUwQ,SAAW,SAAmBhE,EAAQpN,GAEjD,OADAN,EAAyB,qBAAX2H,GACPpH,KAAKoR,YAAYhK,EAAQ+F,EAAQpN,IAG1CiI,EAAGrH,UAAUyJ,QAAU,SAAkB+C,EAAQpN,GAC/C,OAAOC,KAAKoR,YAAYnR,MAAOkN,EAAQpN,IAGzCiI,EAAGrH,UAAUyQ,YAAc,SAAsBC,EAAWlE,EAAQpN,GAClE,IAAIuR,EAAatR,KAAKsR,aAClBC,EAAYxR,GAAUqC,KAAKK,IAAI,EAAG6O,GACtC7R,EAAO6R,GAAcC,EAAW,yCAChC9R,EAAO8R,EAAY,EAAG,+BAEtBvR,KAAK8O,QACL,IAGI1I,EAAGlG,EAHHsR,EAA0B,OAAXrE,EACfzH,EAAM,IAAI2L,EAAUE,GAGpBE,EAAIzR,KAAKyP,QACb,GAAK+B,EAYE,CACL,IAAKtR,EAAI,GAAIuR,EAAEX,SAAU5Q,IACvBkG,EAAIqL,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETjM,EAAIxF,GAAKkG,EAGX,KAAOlG,EAAIqR,EAAWrR,IACpBwF,EAAIxF,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAIqR,EAAYD,EAAYpR,IACtCwF,EAAIxF,GAAK,EAGX,IAAKA,EAAI,GAAIuR,EAAEX,SAAU5Q,IACvBkG,EAAIqL,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETjM,EAAI6L,EAAYrR,EAAI,GAAKkG,EAe7B,OAAOV,GAGLtD,KAAKwP,MACP5J,EAAGrH,UAAUkR,WAAa,SAAqBhD,GAC7C,OAAO,GAAKzM,KAAKwP,MAAM/C,IAGzB7G,EAAGrH,UAAUkR,WAAa,SAAqBhD,GAC7C,IAAI5J,EAAI4J,EACJ7K,EAAI,EAiBR,OAhBIiB,GAAK,OACPjB,GAAK,GACLiB,KAAO,IAELA,GAAK,KACPjB,GAAK,EACLiB,KAAO,GAELA,GAAK,IACPjB,GAAK,EACLiB,KAAO,GAELA,GAAK,IACPjB,GAAK,EACLiB,KAAO,GAEFjB,EAAIiB,GAIf+C,EAAGrH,UAAUmR,UAAY,SAAoBjD,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI5J,EAAI4J,EACJ7K,EAAI,EAoBR,OAnBqB,KAAZ,KAAJiB,KACHjB,GAAK,GACLiB,KAAO,IAEU,KAAV,IAAJA,KACHjB,GAAK,EACLiB,KAAO,GAES,KAAT,GAAJA,KACHjB,GAAK,EACLiB,KAAO,GAES,KAAT,EAAJA,KACHjB,GAAK,EACLiB,KAAO,GAES,KAAT,EAAJA,IACHjB,IAEKA,GAITgE,EAAGrH,UAAU4L,UAAY,WACvB,IAAIsC,EAAI7O,KAAKsN,MAAMtN,KAAKD,OAAS,GAC7BgS,EAAK/R,KAAK6R,WAAWhD,GACzB,OAA2B,IAAnB7O,KAAKD,OAAS,GAAUgS,GAiBlC/J,EAAGrH,UAAUqR,SAAW,WACtB,GAAIhS,KAAK8Q,SAAU,OAAO,EAG1B,IADA,IAAI9M,EAAI,EACC9D,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAAK,CACpC,IAAIkG,EAAIpG,KAAK8R,UAAU9R,KAAKsN,MAAMpN,IAElC,GADA8D,GAAKoC,EACK,KAANA,EAAU,MAEhB,OAAOpC,GAGTgE,EAAGrH,UAAU2Q,WAAa,WACxB,OAAOlP,KAAKM,KAAK1C,KAAKuM,YAAc,IAGtCvE,EAAGrH,UAAUsR,OAAS,SAAiBC,GACrC,OAAsB,IAAlBlS,KAAKqN,SACArN,KAAKmS,MAAMC,MAAMF,GAAOG,MAAM,GAEhCrS,KAAKyP,SAGdzH,EAAGrH,UAAU2R,SAAW,SAAmBJ,GACzC,OAAIlS,KAAK0M,MAAMwF,EAAQ,GACdlS,KAAKuS,KAAKL,GAAOG,MAAM,GAAGG,OAE5BxS,KAAKyP,SAGdzH,EAAGrH,UAAU8R,MAAQ,WACnB,OAAyB,IAAlBzS,KAAKqN,UAIdrF,EAAGrH,UAAU+R,IAAM,WACjB,OAAO1S,KAAKyP,QAAQ+C,QAGtBxK,EAAGrH,UAAU6R,KAAO,WAKlB,OAJKxS,KAAK8Q,WACR9Q,KAAKqN,UAAY,GAGZrN,MAITgI,EAAGrH,UAAUgS,KAAO,SAAe3M,GACjC,MAAOhG,KAAKD,OAASiG,EAAIjG,OACvBC,KAAKsN,MAAMtN,KAAKD,UAAY,EAG9B,IAAK,IAAIG,EAAI,EAAGA,EAAI8F,EAAIjG,OAAQG,IAC9BF,KAAKsN,MAAMpN,GAAKF,KAAKsN,MAAMpN,GAAK8F,EAAIsH,MAAMpN,GAG5C,OAAOF,KAAK8O,SAGd9G,EAAGrH,UAAUiS,IAAM,SAAc5M,GAE/B,OADAvG,EAA0C,KAAlCO,KAAKqN,SAAWrH,EAAIqH,WACrBrN,KAAK2S,KAAK3M,IAInBgC,EAAGrH,UAAUkS,GAAK,SAAa7M,GAC7B,OAAIhG,KAAKD,OAASiG,EAAIjG,OAAeC,KAAKyP,QAAQmD,IAAI5M,GAC/CA,EAAIyJ,QAAQmD,IAAI5S,OAGzBgI,EAAGrH,UAAUmS,IAAM,SAAc9M,GAC/B,OAAIhG,KAAKD,OAASiG,EAAIjG,OAAeC,KAAKyP,QAAQkD,KAAK3M,GAChDA,EAAIyJ,QAAQkD,KAAK3S,OAI1BgI,EAAGrH,UAAUoS,MAAQ,SAAgB/M,GAEnC,IAAII,EAEFA,EADEpG,KAAKD,OAASiG,EAAIjG,OAChBiG,EAEAhG,KAGN,IAAK,IAAIE,EAAI,EAAGA,EAAIkG,EAAErG,OAAQG,IAC5BF,KAAKsN,MAAMpN,GAAKF,KAAKsN,MAAMpN,GAAK8F,EAAIsH,MAAMpN,GAK5C,OAFAF,KAAKD,OAASqG,EAAErG,OAETC,KAAK8O,SAGd9G,EAAGrH,UAAUqS,KAAO,SAAehN,GAEjC,OADAvG,EAA0C,KAAlCO,KAAKqN,SAAWrH,EAAIqH,WACrBrN,KAAK+S,MAAM/M,IAIpBgC,EAAGrH,UAAUsS,IAAM,SAAcjN,GAC/B,OAAIhG,KAAKD,OAASiG,EAAIjG,OAAeC,KAAKyP,QAAQuD,KAAKhN,GAChDA,EAAIyJ,QAAQuD,KAAKhT,OAG1BgI,EAAGrH,UAAUuS,KAAO,SAAelN,GACjC,OAAIhG,KAAKD,OAASiG,EAAIjG,OAAeC,KAAKyP,QAAQsD,MAAM/M,GACjDA,EAAIyJ,QAAQsD,MAAM/S,OAI3BgI,EAAGrH,UAAUwS,MAAQ,SAAgBnN,GAEnC,IAAIqK,EACAjK,EACApG,KAAKD,OAASiG,EAAIjG,QACpBsQ,EAAIrQ,KACJoG,EAAIJ,IAEJqK,EAAIrK,EACJI,EAAIpG,MAGN,IAAK,IAAIE,EAAI,EAAGA,EAAIkG,EAAErG,OAAQG,IAC5BF,KAAKsN,MAAMpN,GAAKmQ,EAAE/C,MAAMpN,GAAKkG,EAAEkH,MAAMpN,GAGvC,GAAIF,OAASqQ,EACX,KAAOnQ,EAAImQ,EAAEtQ,OAAQG,IACnBF,KAAKsN,MAAMpN,GAAKmQ,EAAE/C,MAAMpN,GAM5B,OAFAF,KAAKD,OAASsQ,EAAEtQ,OAETC,KAAK8O,SAGd9G,EAAGrH,UAAUyS,KAAO,SAAepN,GAEjC,OADAvG,EAA0C,KAAlCO,KAAKqN,SAAWrH,EAAIqH,WACrBrN,KAAKmT,MAAMnN,IAIpBgC,EAAGrH,UAAU0S,IAAM,SAAcrN,GAC/B,OAAIhG,KAAKD,OAASiG,EAAIjG,OAAeC,KAAKyP,QAAQ2D,KAAKpN,GAChDA,EAAIyJ,QAAQ2D,KAAKpT,OAG1BgI,EAAGrH,UAAU2S,KAAO,SAAetN,GACjC,OAAIhG,KAAKD,OAASiG,EAAIjG,OAAeC,KAAKyP,QAAQ0D,MAAMnN,GACjDA,EAAIyJ,QAAQ0D,MAAMnT,OAI3BgI,EAAGrH,UAAUyR,MAAQ,SAAgBF,GACnCzS,EAAwB,kBAAVyS,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxBnR,KAAKM,KAAKwP,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvBlS,KAAK0P,QAAQ6D,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIrT,EAAI,EAAGA,EAAIqT,EAAarT,IAC/BF,KAAKsN,MAAMpN,GAAsB,UAAhBF,KAAKsN,MAAMpN,GAS9B,OALIsT,EAAW,IACbxT,KAAKsN,MAAMpN,IAAMF,KAAKsN,MAAMpN,GAAM,UAAc,GAAKsT,GAIhDxT,KAAK8O,SAGd9G,EAAGrH,UAAU4R,KAAO,SAAeL,GACjC,OAAOlS,KAAKyP,QAAQ2C,MAAMF,IAI5BlK,EAAGrH,UAAU8S,KAAO,SAAexD,EAAKtD,GACtClN,EAAsB,kBAARwQ,GAAoBA,GAAO,GAEzC,IAAI/N,EAAO+N,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARAjQ,KAAK0P,QAAQxN,EAAM,GAGjBlC,KAAKsN,MAAMpL,GADTyK,EACgB3M,KAAKsN,MAAMpL,GAAQ,GAAKgO,EAExBlQ,KAAKsN,MAAMpL,KAAS,GAAKgO,GAGtClQ,KAAK8O,SAId9G,EAAGrH,UAAU8L,KAAO,SAAezG,GACjC,IAAIhC,EAkBAqM,EAAGjK,EAfP,GAAsB,IAAlBpG,KAAKqN,UAAmC,IAAjBrH,EAAIqH,SAI7B,OAHArN,KAAKqN,SAAW,EAChBrJ,EAAIhE,KAAK0T,KAAK1N,GACdhG,KAAKqN,UAAY,EACVrN,KAAK2P,YAGP,GAAsB,IAAlB3P,KAAKqN,UAAmC,IAAjBrH,EAAIqH,SAIpC,OAHArH,EAAIqH,SAAW,EACfrJ,EAAIhE,KAAK0T,KAAK1N,GACdA,EAAIqH,SAAW,EACRrJ,EAAE2L,YAKP3P,KAAKD,OAASiG,EAAIjG,QACpBsQ,EAAIrQ,KACJoG,EAAIJ,IAEJqK,EAAIrK,EACJI,EAAIpG,MAIN,IADA,IAAIuQ,EAAQ,EACHrQ,EAAI,EAAGA,EAAIkG,EAAErG,OAAQG,IAC5B8D,GAAkB,EAAbqM,EAAE/C,MAAMpN,KAAwB,EAAbkG,EAAEkH,MAAMpN,IAAUqQ,EAC1CvQ,KAAKsN,MAAMpN,GAAS,SAAJ8D,EAChBuM,EAAQvM,IAAM,GAEhB,KAAiB,IAAVuM,GAAerQ,EAAImQ,EAAEtQ,OAAQG,IAClC8D,GAAkB,EAAbqM,EAAE/C,MAAMpN,IAAUqQ,EACvBvQ,KAAKsN,MAAMpN,GAAS,SAAJ8D,EAChBuM,EAAQvM,IAAM,GAIhB,GADAhE,KAAKD,OAASsQ,EAAEtQ,OACF,IAAVwQ,EACFvQ,KAAKsN,MAAMtN,KAAKD,QAAUwQ,EAC1BvQ,KAAKD,cAEA,GAAIsQ,IAAMrQ,KACf,KAAOE,EAAImQ,EAAEtQ,OAAQG,IACnBF,KAAKsN,MAAMpN,GAAKmQ,EAAE/C,MAAMpN,GAI5B,OAAOF,MAITgI,EAAGrH,UAAUgT,IAAM,SAAc3N,GAC/B,IAAIN,EACJ,OAAqB,IAAjBM,EAAIqH,UAAoC,IAAlBrN,KAAKqN,UAC7BrH,EAAIqH,SAAW,EACf3H,EAAM1F,KAAK4T,IAAI5N,GACfA,EAAIqH,UAAY,EACT3H,GACmB,IAAjBM,EAAIqH,UAAoC,IAAlBrN,KAAKqN,UACpCrN,KAAKqN,SAAW,EAChB3H,EAAMM,EAAI4N,IAAI5T,MACdA,KAAKqN,SAAW,EACT3H,GAGL1F,KAAKD,OAASiG,EAAIjG,OAAeC,KAAKyP,QAAQhD,KAAKzG,GAEhDA,EAAIyJ,QAAQhD,KAAKzM,OAI1BgI,EAAGrH,UAAU+S,KAAO,SAAe1N,GAEjC,GAAqB,IAAjBA,EAAIqH,SAAgB,CACtBrH,EAAIqH,SAAW,EACf,IAAIrJ,EAAIhE,KAAKyM,KAAKzG,GAElB,OADAA,EAAIqH,SAAW,EACRrJ,EAAE2L,YAGJ,GAAsB,IAAlB3P,KAAKqN,SAId,OAHArN,KAAKqN,SAAW,EAChBrN,KAAKyM,KAAKzG,GACVhG,KAAKqN,SAAW,EACTrN,KAAK2P,YAId,IAWIU,EAAGjK,EAXHqD,EAAMzJ,KAAKyJ,IAAIzD,GAGnB,GAAY,IAARyD,EAIF,OAHAzJ,KAAKqN,SAAW,EAChBrN,KAAKD,OAAS,EACdC,KAAKsN,MAAM,GAAK,EACTtN,KAKLyJ,EAAM,GACR4G,EAAIrQ,KACJoG,EAAIJ,IAEJqK,EAAIrK,EACJI,EAAIpG,MAIN,IADA,IAAIuQ,EAAQ,EACHrQ,EAAI,EAAGA,EAAIkG,EAAErG,OAAQG,IAC5B8D,GAAkB,EAAbqM,EAAE/C,MAAMpN,KAAwB,EAAbkG,EAAEkH,MAAMpN,IAAUqQ,EAC1CA,EAAQvM,GAAK,GACbhE,KAAKsN,MAAMpN,GAAS,SAAJ8D,EAElB,KAAiB,IAAVuM,GAAerQ,EAAImQ,EAAEtQ,OAAQG,IAClC8D,GAAkB,EAAbqM,EAAE/C,MAAMpN,IAAUqQ,EACvBA,EAAQvM,GAAK,GACbhE,KAAKsN,MAAMpN,GAAS,SAAJ8D,EAIlB,GAAc,IAAVuM,GAAerQ,EAAImQ,EAAEtQ,QAAUsQ,IAAMrQ,KACvC,KAAOE,EAAImQ,EAAEtQ,OAAQG,IACnBF,KAAKsN,MAAMpN,GAAKmQ,EAAE/C,MAAMpN,GAU5B,OANAF,KAAKD,OAASqC,KAAKK,IAAIzC,KAAKD,OAAQG,GAEhCmQ,IAAMrQ,OACRA,KAAKqN,SAAW,GAGXrN,KAAK8O,SAId9G,EAAGrH,UAAUiT,IAAM,SAAc5N,GAC/B,OAAOhG,KAAKyP,QAAQiE,KAAK1N,IA+C3B,IAAI6N,EAAc,SAAsBzD,EAAMpK,EAAK9E,GACjD,IAIIoP,EACAwD,EACA/B,EANA1B,EAAID,EAAK9C,MACTlH,EAAIJ,EAAIsH,MACRyG,EAAI7S,EAAIoM,MACRO,EAAI,EAIJmG,EAAY,EAAP3D,EAAE,GACP4D,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9D,EAAE,GACP+D,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjE,EAAE,GACPkE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpE,EAAE,GACPqE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvE,EAAE,GACPwE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1E,EAAE,GACP2E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7E,EAAE,GACP8E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhF,EAAE,GACPiF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnF,EAAE,GACPoF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtF,EAAE,GACPuF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1P,EAAE,GACP2P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7P,EAAE,GACP8P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhQ,EAAE,GACPiQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnQ,EAAE,GACPoQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtQ,EAAE,GACPuQ,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAPzQ,EAAE,GACP0Q,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP5Q,EAAE,GACP6Q,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/Q,EAAE,GACPgR,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPlR,EAAE,GACPmR,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPrR,EAAE,GACPsR,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBvW,EAAImM,SAAW+C,EAAK/C,SAAWrH,EAAIqH,SACnCnM,EAAInB,OAAS,GAEbuQ,EAAKlO,KAAKwV,KAAK3D,EAAK8B,GACpBjC,EAAM1R,KAAKwV,KAAK3D,EAAK+B,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAK6B,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAK1D,EAAK8B,GACpB,IAAI6B,IAAQhK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAKlO,KAAKwV,KAAKxD,EAAK2B,GACpBjC,EAAM1R,KAAKwV,KAAKxD,EAAK4B,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAK0B,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAKvD,EAAK2B,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAKiC,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAKkC,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAKgC,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAKiC,GAAQ,EAClC,IAAI2B,IAAQjK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAKlO,KAAKwV,KAAKrD,EAAKwB,GACpBjC,EAAM1R,KAAKwV,KAAKrD,EAAKyB,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAKuB,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAKpD,EAAKwB,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAK8B,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAK+B,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAK6B,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAK8B,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAKoC,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAKqC,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAKmC,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAKoC,GAAQ,EAClC,IAAIyB,IAAQlK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENzH,EAAKlO,KAAKwV,KAAKlD,EAAKqB,GACpBjC,EAAM1R,KAAKwV,KAAKlD,EAAKsB,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAKoB,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAKjD,EAAKqB,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAK2B,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAK4B,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAK0B,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAK2B,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAKiC,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAKkC,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAKgC,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAKiC,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAKuC,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAKwC,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAKsC,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAKuC,GAAQ,EAClC,IAAIuB,IAAQnK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAEN1H,EAAKlO,KAAKwV,KAAK/C,EAAKkB,GACpBjC,EAAM1R,KAAKwV,KAAK/C,EAAKmB,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAKiB,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAK9C,EAAKkB,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAKwB,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAKyB,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAKuB,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAKwB,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAK8B,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAK+B,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAK8B,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAKoC,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAKqC,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAKmC,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAKoC,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAK0C,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAK2C,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAKyC,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAK0C,IAAQ,EAClC,IAAIqB,IAAQpK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAEN3H,EAAKlO,KAAKwV,KAAK5C,EAAKe,GACpBjC,EAAM1R,KAAKwV,KAAK5C,EAAKgB,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKc,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAK3C,EAAKe,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAKqB,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAKsB,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAKoB,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAKqB,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAK2B,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAK4B,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAK2B,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAKiC,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAKkC,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAKgC,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAKiC,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAKuC,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAKwC,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAKsC,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAKuC,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAK6C,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAK8C,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAK4C,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAK6C,IAAQ,EAClC,IAAImB,IAAQrK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAEN5H,EAAKlO,KAAKwV,KAAKzC,EAAKY,GACpBjC,EAAM1R,KAAKwV,KAAKzC,EAAKa,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKW,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAKxC,EAAKY,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAKkB,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAKmB,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKiB,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAKkB,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAKwB,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAKyB,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAKwB,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAK8B,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAK+B,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAK6B,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAK8B,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAKoC,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAKqC,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAKmC,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAKoC,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAK0C,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAK2C,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAKyC,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAK0C,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAKgD,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAKiD,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAK+C,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAKgD,IAAQ,EAClC,IAAIiB,IAAQtK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAEN7H,EAAKlO,KAAKwV,KAAKtC,EAAKS,GACpBjC,EAAM1R,KAAKwV,KAAKtC,EAAKU,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKQ,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAKrC,EAAKS,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAKe,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAKgB,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKc,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAKe,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAKqB,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAKsB,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAKqB,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAK2B,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAK4B,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAK0B,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAK2B,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAKiC,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAKkC,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAKgC,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAKiC,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAKuC,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAKwC,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAKuC,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAK6C,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAK8C,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAK4C,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAK6C,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAKmD,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAKoD,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAKkD,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAKmD,IAAQ,EAClC,IAAIe,IAAQvK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAEN9H,EAAKlO,KAAKwV,KAAKnC,EAAKM,GACpBjC,EAAM1R,KAAKwV,KAAKnC,EAAKO,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKK,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAKlC,EAAKM,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAKY,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAKa,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKW,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAKY,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAKkB,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAKmB,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAKkB,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAKwB,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAKyB,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKuB,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAKwB,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAK8B,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAK+B,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAK6B,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAK8B,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAKoC,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAKqC,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAKoC,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAK0C,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAK2C,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAKyC,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAK0C,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAKgD,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAKiD,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAK+C,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAKgD,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAKsD,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAKuD,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAKqD,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAKsD,IAAQ,EAClC,IAAIa,IAAQxK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAEN/H,EAAKlO,KAAKwV,KAAKhC,EAAKG,GACpBjC,EAAM1R,KAAKwV,KAAKhC,EAAKI,GACrBlC,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKE,GAAQ,EACpChE,EAAK3P,KAAKwV,KAAK/B,EAAKG,GACpB1F,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAKS,GAAQ,EAClCpC,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAKU,GAAQ,EACpCrC,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKQ,GAAQ,EACpCnE,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAKS,GAAQ,EAClC7F,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAKe,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAKgB,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKc,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAKe,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAKqB,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAKsB,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKoB,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAKqB,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAK2B,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAK4B,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAK0B,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAK2B,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAKiC,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAKkC,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAKiC,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAKuC,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAKwC,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAKsC,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAKuC,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAK6C,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAK8C,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAK4C,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAK6C,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAKmD,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAKoD,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAKkD,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAKmD,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAK3D,EAAKyD,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAK3D,EAAK0D,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAK1D,EAAKwD,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAK1D,EAAKyD,IAAQ,EAClC,IAAIW,IAAQzK,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACrDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAENhI,EAAKlO,KAAKwV,KAAKhC,EAAKM,GACpBpC,EAAM1R,KAAKwV,KAAKhC,EAAKO,GACrBrC,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKK,GAAQ,EACpCnE,EAAK3P,KAAKwV,KAAK/B,EAAKM,GACpB7F,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAKY,GAAQ,EAClCvC,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAKa,GAAQ,EACpCxC,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKW,GAAQ,EACpCtE,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAKY,GAAQ,EAClChG,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAKkB,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAKmB,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKiB,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAKkB,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAKwB,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAKyB,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKuB,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAKwB,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAK8B,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAK+B,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAK8B,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAKoC,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAKqC,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAKmC,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAKoC,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAK0C,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAK2C,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAKyC,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAK0C,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAKgD,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAKiD,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAK+C,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAKgD,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAKxD,EAAKsD,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAKxD,EAAKuD,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAKvD,EAAKqD,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAKvD,EAAKsD,IAAQ,EAClC,IAAIY,IAAS1K,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEPjI,EAAKlO,KAAKwV,KAAKhC,EAAKS,GACpBvC,EAAM1R,KAAKwV,KAAKhC,EAAKU,GACrBxC,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKQ,GAAQ,EACpCtE,EAAK3P,KAAKwV,KAAK/B,EAAKS,GACpBhG,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAKe,GAAQ,EAClC1C,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAKgB,GAAQ,EACpC3C,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKc,GAAQ,EACpCzE,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAKe,GAAQ,EAClCnG,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAKqB,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAKsB,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKoB,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAKqB,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAK2B,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAK4B,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAK2B,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAKiC,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAKkC,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKgC,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAKiC,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAKuC,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAKwC,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAKsC,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAKuC,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAK6C,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAK8C,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAK4C,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAK6C,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAKrD,EAAKmD,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAKrD,EAAKoD,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAKpD,EAAKkD,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAKpD,EAAKmD,IAAQ,EAClC,IAAIa,IAAS3K,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPlI,EAAKlO,KAAKwV,KAAKhC,EAAKY,GACpB1C,EAAM1R,KAAKwV,KAAKhC,EAAKa,GACrB3C,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKW,GAAQ,EACpCzE,EAAK3P,KAAKwV,KAAK/B,EAAKY,GACpBnG,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAKkB,GAAQ,EAClC7C,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAKmB,IAAQ,EACpC9C,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKiB,GAAQ,EACpC5E,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAKkB,IAAQ,EAClCtG,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAKwB,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAKyB,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAKwB,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAK8B,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAK+B,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAK8B,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAKoC,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAKqC,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKmC,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAKoC,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAK0C,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAK2C,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAKyC,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAK0C,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAKlD,EAAKgD,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAKlD,EAAKiD,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAKjD,EAAK+C,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAKjD,EAAKgD,IAAQ,EAClC,IAAIc,IAAS5K,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEPnI,EAAKlO,KAAKwV,KAAKhC,EAAKe,GACpB7C,EAAM1R,KAAKwV,KAAKhC,EAAKgB,IACrB9C,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKc,GAAQ,EACpC5E,EAAK3P,KAAKwV,KAAK/B,EAAKe,IACpBtG,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAKqB,IAAQ,EAClChD,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAKsB,IAAQ,EACpCjD,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAKqB,IAAQ,EAClCzG,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAK2B,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAK4B,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAK0B,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAK2B,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAKiC,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAKkC,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKgC,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAKiC,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAKuC,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAKwC,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKsC,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAKuC,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAK/C,EAAK6C,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAK/C,EAAK8C,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAK9C,EAAK4C,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAK9C,EAAK6C,IAAQ,EAClC,IAAIe,IAAS7K,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEPpI,EAAKlO,KAAKwV,KAAKhC,EAAKkB,IACpBhD,EAAM1R,KAAKwV,KAAKhC,EAAKmB,IACrBjD,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKiB,IAAQ,EACpC/E,EAAK3P,KAAKwV,KAAK/B,EAAKkB,IACpBzG,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAKwB,IAAQ,EAClCnD,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAKyB,IAAQ,EACpCpD,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKuB,IAAQ,EACpClF,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAKwB,IAAQ,EAClC5G,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAK8B,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAK+B,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAK6B,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAK8B,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAKoC,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAKqC,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKmC,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAKoC,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAK5C,EAAK0C,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAK5C,EAAK2C,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAK3C,EAAKyC,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAK3C,EAAK0C,IAAQ,EAClC,IAAIgB,IAAS9K,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEPrI,EAAKlO,KAAKwV,KAAKhC,EAAKqB,IACpBnD,EAAM1R,KAAKwV,KAAKhC,EAAKsB,IACrBpD,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKoB,IAAQ,EACpClF,EAAK3P,KAAKwV,KAAK/B,EAAKqB,IACpB5G,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAK2B,IAAQ,EAClCtD,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAK4B,IAAQ,EACpCvD,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAK0B,IAAQ,EACpCrF,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAK2B,IAAQ,EAClC/G,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAKiC,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAKkC,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKgC,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAKiC,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAKzC,EAAKuC,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAKzC,EAAKwC,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAKxC,EAAKsC,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAKxC,EAAKuC,IAAQ,EAClC,IAAIiB,IAAS/K,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPtI,EAAKlO,KAAKwV,KAAKhC,EAAKwB,IACpBtD,EAAM1R,KAAKwV,KAAKhC,EAAKyB,IACrBvD,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAKuB,IAAQ,EACpCrF,EAAK3P,KAAKwV,KAAK/B,EAAKwB,IACpB/G,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAK8B,IAAQ,EAClCzD,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAK+B,IAAQ,EACpC1D,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAK6B,IAAQ,EACpCxF,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAK8B,IAAQ,EAClClH,EAAMA,EAAKlO,KAAKwV,KAAKtC,EAAKoC,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAKtC,EAAKqC,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAKrC,EAAKmC,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAKrC,EAAKoC,IAAQ,EAClC,IAAIkB,IAAShL,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEPvI,EAAKlO,KAAKwV,KAAKhC,EAAK2B,IACpBzD,EAAM1R,KAAKwV,KAAKhC,EAAK4B,IACrB1D,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAK0B,IAAQ,EACpCxF,EAAK3P,KAAKwV,KAAK/B,EAAK2B,IACpBlH,EAAMA,EAAKlO,KAAKwV,KAAKnC,EAAKiC,IAAQ,EAClC5D,EAAOA,EAAM1R,KAAKwV,KAAKnC,EAAKkC,IAAQ,EACpC7D,EAAOA,EAAM1R,KAAKwV,KAAKlC,EAAKgC,IAAQ,EACpC3F,EAAMA,EAAK3P,KAAKwV,KAAKlC,EAAKiC,IAAQ,EAClC,IAAImB,IAASjL,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EACtDjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAEPxI,EAAKlO,KAAKwV,KAAKhC,EAAK8B,IACpB5D,EAAM1R,KAAKwV,KAAKhC,EAAK+B,IACrB7D,EAAOA,EAAM1R,KAAKwV,KAAK/B,EAAK6B,IAAQ,EACpC3F,EAAK3P,KAAKwV,KAAK/B,EAAK8B,IACpB,IAAIoB,IAASlL,EAAIyC,EAAM,KAAa,KAANwD,IAAiB,IAAO,EA0BtD,OAzBAjG,GAAOkE,GAAM+B,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK8D,GACP9D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANlL,IACFkG,EAAE,IAAMlG,EACR3M,EAAInB,UAECmB,GAQT,SAAS8X,EAAU5I,EAAMpK,EAAK9E,GAC5BA,EAAImM,SAAWrH,EAAIqH,SAAW+C,EAAK/C,SACnCnM,EAAInB,OAASqQ,EAAKrQ,OAASiG,EAAIjG,OAI/B,IAFA,IAAIwQ,EAAQ,EACR0I,EAAU,EACLnN,EAAI,EAAGA,EAAI5K,EAAInB,OAAS,EAAG+L,IAAK,CAGvC,IAAI0E,EAASyI,EACbA,EAAU,EAGV,IAFA,IAAIxI,EAAgB,SAARF,EACRG,EAAOtO,KAAKD,IAAI2J,EAAG9F,EAAIjG,OAAS,GAC3BgG,EAAI3D,KAAKK,IAAI,EAAGqJ,EAAIsE,EAAKrQ,OAAS,GAAIgG,GAAK2K,EAAM3K,IAAK,CAC7D,IAAI7F,EAAI4L,EAAI/F,EACRsK,EAAoB,EAAhBD,EAAK9C,MAAMpN,GACfkG,EAAmB,EAAfJ,EAAIsH,MAAMvH,GACd/B,EAAIqM,EAAIjK,EAERkK,EAAS,SAAJtM,EACTwM,EAAUA,GAAWxM,EAAI,SAAa,GAAM,EAC5CsM,EAAMA,EAAKG,EAAS,EACpBA,EAAa,SAALH,EACRE,EAAUA,GAAUF,IAAO,IAAO,EAElC2I,GAAWzI,IAAW,GACtBA,GAAU,SAEZtP,EAAIoM,MAAMxB,GAAK2E,EACfF,EAAQC,EACRA,EAASyI,EAQX,OANc,IAAV1I,EACFrP,EAAIoM,MAAMxB,GAAKyE,EAEfrP,EAAInB,SAGCmB,EAAI4N,QAGb,SAASoK,EAAY9I,EAAMpK,EAAK9E,GAC9B,IAAIiY,EAAO,IAAIC,EACf,OAAOD,EAAKE,KAAKjJ,EAAMpK,EAAK9E,GAsB9B,SAASkY,EAAME,EAAGC,GAChBvZ,KAAKsZ,EAAIA,EACTtZ,KAAKuZ,EAAIA,EAvENnX,KAAKwV,OACR/D,EAAc1D,GAiDhBnI,EAAGrH,UAAU6Y,MAAQ,SAAgBxT,EAAK9E,GACxC,IAAIwE,EACAQ,EAAMlG,KAAKD,OAASiG,EAAIjG,OAW5B,OATE2F,EADkB,KAAhB1F,KAAKD,QAAgC,KAAfiG,EAAIjG,OACtB8T,EAAY7T,KAAMgG,EAAK9E,GACpBgF,EAAM,GACTiK,EAAWnQ,KAAMgG,EAAK9E,GACnBgF,EAAM,KACT8S,EAAShZ,KAAMgG,EAAK9E,GAEpBgY,EAAWlZ,KAAMgG,EAAK9E,GAGvBwE,GAWT0T,EAAKzY,UAAU8Y,QAAU,SAAkBC,GAGzC,IAFA,IAAIzU,EAAI,IAAIhF,MAAMyZ,GACd3V,EAAIiE,EAAGrH,UAAUkR,WAAW6H,GAAK,EAC5BxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,IACrB+E,EAAE/E,GAAKF,KAAK2Z,OAAOzZ,EAAG6D,EAAG2V,GAG3B,OAAOzU,GAITmU,EAAKzY,UAAUgZ,OAAS,SAAiBL,EAAGvV,EAAG2V,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIM,EAAK,EACA1Z,EAAI,EAAGA,EAAI6D,EAAG7D,IACrB0Z,IAAW,EAAJN,IAAWvV,EAAI7D,EAAI,EAC1BoZ,IAAM,EAGR,OAAOM,GAKTR,EAAKzY,UAAUqE,QAAU,SAAkB6U,EAAKC,EAAKC,EAAKC,EAAMC,EAAMP,GACpE,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,IACrB8Z,EAAK9Z,GAAK4Z,EAAID,EAAI3Z,IAClB+Z,EAAK/Z,GAAK6Z,EAAIF,EAAI3Z,KAItBkZ,EAAKzY,UAAUuZ,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMP,EAAGG,GACtE7Z,KAAKgF,QAAQ6U,EAAKC,EAAKC,EAAKC,EAAMC,EAAMP,GAExC,IAAK,IAAI7U,EAAI,EAAGA,EAAI6U,EAAG7U,IAAM,EAM3B,IALA,IAAId,EAAIc,GAAK,EAETsV,EAAQ/X,KAAKgY,IAAI,EAAIhY,KAAKiY,GAAKtW,GAC/BuW,EAAQlY,KAAKmY,IAAI,EAAInY,KAAKiY,GAAKtW,GAE1BiI,EAAI,EAAGA,EAAI0N,EAAG1N,GAAKjI,EAI1B,IAHA,IAAIyW,EAASL,EACTM,EAASH,EAEJvU,EAAI,EAAGA,EAAIlB,EAAGkB,IAAK,CAC1B,IAAI2U,EAAKV,EAAKhO,EAAIjG,GACd4U,EAAKV,EAAKjO,EAAIjG,GAEd6U,EAAKZ,EAAKhO,EAAIjG,EAAIlB,GAClBgW,EAAKZ,EAAKjO,EAAIjG,EAAIlB,GAElBiW,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELd,EAAKhO,EAAIjG,GAAK2U,EAAKE,EACnBX,EAAKjO,EAAIjG,GAAK4U,EAAKE,EAEnBb,EAAKhO,EAAIjG,EAAIlB,GAAK6V,EAAKE,EACvBX,EAAKjO,EAAIjG,EAAIlB,GAAK8V,EAAKE,EAGnB9U,IAAMhC,IACR+W,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnB1B,EAAKzY,UAAUoa,YAAc,SAAsBC,EAAGC,GACpD,IAAIvB,EAAqB,EAAjBtX,KAAKK,IAAIwY,EAAGD,GAChBE,EAAU,EAAJxB,EACNxZ,EAAI,EACR,IAAKwZ,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/BxZ,IAGF,OAAO,GAAKA,EAAI,EAAIgb,GAGtB9B,EAAKzY,UAAUwa,UAAY,SAAoBrB,EAAKC,EAAKL,GACvD,KAAIA,GAAK,GAET,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAI,EAAGxZ,IAAK,CAC9B,IAAI+E,EAAI6U,EAAI5Z,GAEZ4Z,EAAI5Z,GAAK4Z,EAAIJ,EAAIxZ,EAAI,GACrB4Z,EAAIJ,EAAIxZ,EAAI,GAAK+E,EAEjBA,EAAI8U,EAAI7Z,GAER6Z,EAAI7Z,IAAM6Z,EAAIL,EAAIxZ,EAAI,GACtB6Z,EAAIL,EAAIxZ,EAAI,IAAM+E,IAItBmU,EAAKzY,UAAUya,aAAe,SAAuBC,EAAI3B,GAEvD,IADA,IAAInJ,EAAQ,EACHrQ,EAAI,EAAGA,EAAIwZ,EAAI,EAAGxZ,IAAK,CAC9B,IAAI2O,EAAoC,KAAhCzM,KAAKkZ,MAAMD,EAAG,EAAInb,EAAI,GAAKwZ,GACjCtX,KAAKkZ,MAAMD,EAAG,EAAInb,GAAKwZ,GACvBnJ,EAEF8K,EAAGnb,GAAS,SAAJ2O,EAGN0B,EADE1B,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOwM,GAGTjC,EAAKzY,UAAU4a,WAAa,SAAqBF,EAAInV,EAAK4T,EAAKJ,GAE7D,IADA,IAAInJ,EAAQ,EACHrQ,EAAI,EAAGA,EAAIgG,EAAKhG,IACvBqQ,GAAyB,EAAR8K,EAAGnb,GAEpB4Z,EAAI,EAAI5Z,GAAa,KAARqQ,EAAgBA,KAAkB,GAC/CuJ,EAAI,EAAI5Z,EAAI,GAAa,KAARqQ,EAAgBA,KAAkB,GAIrD,IAAKrQ,EAAI,EAAIgG,EAAKhG,EAAIwZ,IAAKxZ,EACzB4Z,EAAI5Z,GAAK,EAGXT,EAAiB,IAAV8Q,GACP9Q,EAA6B,MAAb,KAAR8Q,KAGV6I,EAAKzY,UAAU6a,KAAO,SAAe9B,GAEnC,IADA,IAAI+B,EAAK,IAAIxb,MAAMyZ,GACVxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,IACrBub,EAAGvb,GAAK,EAGV,OAAOub,GAGTrC,EAAKzY,UAAU0Y,KAAO,SAAeC,EAAGC,EAAGrY,GACzC,IAAIwY,EAAI,EAAI1Z,KAAK+a,YAAYzB,EAAEvZ,OAAQwZ,EAAExZ,QAErC8Z,EAAM7Z,KAAKyZ,QAAQC,GAEnBgC,EAAI1b,KAAKwb,KAAK9B,GAEdI,EAAM,IAAI7Z,MAAMyZ,GAChBiC,EAAO,IAAI1b,MAAMyZ,GACjBkC,EAAO,IAAI3b,MAAMyZ,GAEjBmC,EAAO,IAAI5b,MAAMyZ,GACjBoC,EAAQ,IAAI7b,MAAMyZ,GAClBqC,EAAQ,IAAI9b,MAAMyZ,GAElBsC,EAAO9a,EAAIoM,MACf0O,EAAKjc,OAAS2Z,EAEd1Z,KAAKub,WAAWjC,EAAEhM,MAAOgM,EAAEvZ,OAAQ+Z,EAAKJ,GACxC1Z,KAAKub,WAAWhC,EAAEjM,MAAOiM,EAAExZ,OAAQ8b,EAAMnC,GAEzC1Z,KAAKka,UAAUJ,EAAK4B,EAAGC,EAAMC,EAAMlC,EAAGG,GACtC7Z,KAAKka,UAAU2B,EAAMH,EAAGI,EAAOC,EAAOrC,EAAGG,GAEzC,IAAK,IAAI3Z,EAAI,EAAGA,EAAIwZ,EAAGxZ,IAAK,CAC1B,IAAI4a,EAAKa,EAAKzb,GAAK4b,EAAM5b,GAAK0b,EAAK1b,GAAK6b,EAAM7b,GAC9C0b,EAAK1b,GAAKyb,EAAKzb,GAAK6b,EAAM7b,GAAK0b,EAAK1b,GAAK4b,EAAM5b,GAC/Cyb,EAAKzb,GAAK4a,EAUZ,OAPA9a,KAAKmb,UAAUQ,EAAMC,EAAMlC,GAC3B1Z,KAAKka,UAAUyB,EAAMC,EAAMI,EAAMN,EAAGhC,EAAGG,GACvC7Z,KAAKmb,UAAUa,EAAMN,EAAGhC,GACxB1Z,KAAKob,aAAaY,EAAMtC,GAExBxY,EAAImM,SAAWiM,EAAEjM,SAAWkM,EAAElM,SAC9BnM,EAAInB,OAASuZ,EAAEvZ,OAASwZ,EAAExZ,OACnBmB,EAAI4N,SAIb9G,EAAGrH,UAAUyN,IAAM,SAAcpI,GAC/B,IAAI9E,EAAM,IAAI8G,EAAG,MAEjB,OADA9G,EAAIoM,MAAQ,IAAIrN,MAAMD,KAAKD,OAASiG,EAAIjG,QACjCC,KAAKwZ,MAAMxT,EAAK9E,IAIzB8G,EAAGrH,UAAUsb,KAAO,SAAejW,GACjC,IAAI9E,EAAM,IAAI8G,EAAG,MAEjB,OADA9G,EAAIoM,MAAQ,IAAIrN,MAAMD,KAAKD,OAASiG,EAAIjG,QACjCmZ,EAAWlZ,KAAMgG,EAAK9E,IAI/B8G,EAAGrH,UAAUiX,KAAO,SAAe5R,GACjC,OAAOhG,KAAKyP,QAAQ+J,MAAMxT,EAAKhG,OAGjCgI,EAAGrH,UAAUyO,MAAQ,SAAgBpJ,GACnCvG,EAAsB,kBAARuG,GACdvG,EAAOuG,EAAM,UAIb,IADA,IAAIuK,EAAQ,EACHrQ,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAAK,CACpC,IAAI2O,GAAqB,EAAhB7O,KAAKsN,MAAMpN,IAAU8F,EAC1BsK,GAAU,SAAJzB,IAA0B,SAAR0B,GAC5BA,IAAU,GACVA,GAAU1B,EAAI,SAAa,EAE3B0B,GAASD,IAAO,GAChBtQ,KAAKsN,MAAMpN,GAAU,SAALoQ,EAQlB,OALc,IAAVC,IACFvQ,KAAKsN,MAAMpN,GAAKqQ,EAChBvQ,KAAKD,UAGAC,MAGTgI,EAAGrH,UAAUub,KAAO,SAAelW,GACjC,OAAOhG,KAAKyP,QAAQL,MAAMpJ,IAI5BgC,EAAGrH,UAAUwb,IAAM,WACjB,OAAOnc,KAAKoO,IAAIpO,OAIlBgI,EAAGrH,UAAUyb,KAAO,WAClB,OAAOpc,KAAK4X,KAAK5X,KAAKyP,UAIxBzH,EAAGrH,UAAU2O,IAAM,SAActJ,GAC/B,IAAI6I,EAAImB,EAAWhK,GACnB,GAAiB,IAAb6I,EAAE9O,OAAc,OAAO,IAAIiI,EAAG,GAIlC,IADA,IAAItC,EAAM1F,KACDE,EAAI,EAAGA,EAAI2O,EAAE9O,OAAQG,IAAKwF,EAAMA,EAAIyW,MAC3C,GAAa,IAATtN,EAAE3O,GAAU,MAGlB,KAAMA,EAAI2O,EAAE9O,OACV,IAAK,IAAI0R,EAAI/L,EAAIyW,MAAOjc,EAAI2O,EAAE9O,OAAQG,IAAKuR,EAAIA,EAAE0K,MAClC,IAATtN,EAAE3O,KAENwF,EAAMA,EAAI0I,IAAIqD,IAIlB,OAAO/L,GAITsC,EAAGrH,UAAU0b,OAAS,SAAiBhQ,GACrC5M,EAAuB,kBAAT4M,GAAqBA,GAAQ,GAC3C,IAGInM,EAHA8D,EAAIqI,EAAO,GACXxH,GAAKwH,EAAOrI,GAAK,GACjBsY,EAAa,WAAe,GAAKtY,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIuM,EAAQ,EAEZ,IAAKrQ,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAAK,CAChC,IAAIqc,EAAWvc,KAAKsN,MAAMpN,GAAKoc,EAC3BzO,GAAsB,EAAhB7N,KAAKsN,MAAMpN,IAAUqc,GAAavY,EAC5ChE,KAAKsN,MAAMpN,GAAK2N,EAAI0C,EACpBA,EAAQgM,IAAc,GAAKvY,EAGzBuM,IACFvQ,KAAKsN,MAAMpN,GAAKqQ,EAChBvQ,KAAKD,UAIT,GAAU,IAAN8E,EAAS,CACX,IAAK3E,EAAIF,KAAKD,OAAS,EAAGG,GAAK,EAAGA,IAChCF,KAAKsN,MAAMpN,EAAI2E,GAAK7E,KAAKsN,MAAMpN,GAGjC,IAAKA,EAAI,EAAGA,EAAI2E,EAAG3E,IACjBF,KAAKsN,MAAMpN,GAAK,EAGlBF,KAAKD,QAAU8E,EAGjB,OAAO7E,KAAK8O,SAGd9G,EAAGrH,UAAU6b,MAAQ,SAAgBnQ,GAGnC,OADA5M,EAAyB,IAAlBO,KAAKqN,UACLrN,KAAKqc,OAAOhQ,IAMrBrE,EAAGrH,UAAUgR,OAAS,SAAiBtF,EAAMoQ,EAAMC,GAEjD,IAAIC,EADJld,EAAuB,kBAAT4M,GAAqBA,GAAQ,GAGzCsQ,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIzY,EAAIqI,EAAO,GACXxH,EAAIzC,KAAKD,KAAKkK,EAAOrI,GAAK,GAAIhE,KAAKD,QACnC6c,EAAO,SAAc,WAAc5Y,GAAMA,EACzC6Y,EAAcH,EAMlB,GAJAC,GAAK9X,EACL8X,EAAIva,KAAKK,IAAI,EAAGka,GAGZE,EAAa,CACf,IAAK,IAAI3c,EAAI,EAAGA,EAAI2E,EAAG3E,IACrB2c,EAAYvP,MAAMpN,GAAKF,KAAKsN,MAAMpN,GAEpC2c,EAAY9c,OAAS8E,EAGvB,GAAU,IAANA,QAEG,GAAI7E,KAAKD,OAAS8E,EAEvB,IADA7E,KAAKD,QAAU8E,EACV3E,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAC3BF,KAAKsN,MAAMpN,GAAKF,KAAKsN,MAAMpN,EAAI2E,QAGjC7E,KAAKsN,MAAM,GAAK,EAChBtN,KAAKD,OAAS,EAGhB,IAAIwQ,EAAQ,EACZ,IAAKrQ,EAAIF,KAAKD,OAAS,EAAGG,GAAK,IAAgB,IAAVqQ,GAAerQ,GAAKyc,GAAIzc,IAAK,CAChE,IAAIiP,EAAuB,EAAhBnP,KAAKsN,MAAMpN,GACtBF,KAAKsN,MAAMpN,GAAMqQ,GAAU,GAAKvM,EAAOmL,IAASnL,EAChDuM,EAAQpB,EAAOyN,EAajB,OATIC,GAAyB,IAAVtM,IACjBsM,EAAYvP,MAAMuP,EAAY9c,UAAYwQ,GAGxB,IAAhBvQ,KAAKD,SACPC,KAAKsN,MAAM,GAAK,EAChBtN,KAAKD,OAAS,GAGTC,KAAK8O,SAGd9G,EAAGrH,UAAU6L,MAAQ,SAAgBH,EAAMoQ,EAAMC,GAG/C,OADAjd,EAAyB,IAAlBO,KAAKqN,UACLrN,KAAK2R,OAAOtF,EAAMoQ,EAAMC,IAIjC1U,EAAGrH,UAAUmc,KAAO,SAAezQ,GACjC,OAAOrM,KAAKyP,QAAQ+M,MAAMnQ,IAG5BrE,EAAGrH,UAAUoc,MAAQ,SAAgB1Q,GACnC,OAAOrM,KAAKyP,QAAQ4M,OAAOhQ,IAI7BrE,EAAGrH,UAAU6I,KAAO,SAAe6C,GACjC,OAAOrM,KAAKyP,QAAQjD,MAAMH,IAG5BrE,EAAGrH,UAAUqc,MAAQ,SAAgB3Q,GACnC,OAAOrM,KAAKyP,QAAQkC,OAAOtF,IAI7BrE,EAAGrH,UAAU+L,MAAQ,SAAgBuD,GACnCxQ,EAAsB,kBAARwQ,GAAoBA,GAAO,GACzC,IAAIjM,EAAIiM,EAAM,GACVpL,GAAKoL,EAAMjM,GAAK,GAChByN,EAAI,GAAKzN,EAGb,GAAIhE,KAAKD,QAAU8E,EAAG,OAAO,EAG7B,IAAIgK,EAAI7O,KAAKsN,MAAMzI,GAEnB,SAAUgK,EAAI4C,IAIhBzJ,EAAGrH,UAAUsc,OAAS,SAAiB5Q,GACrC5M,EAAuB,kBAAT4M,GAAqBA,GAAQ,GAC3C,IAAIrI,EAAIqI,EAAO,GACXxH,GAAKwH,EAAOrI,GAAK,GAIrB,GAFAvE,EAAyB,IAAlBO,KAAKqN,SAAgB,2CAExBrN,KAAKD,QAAU8E,EACjB,OAAO7E,KAQT,GALU,IAANgE,GACFa,IAEF7E,KAAKD,OAASqC,KAAKD,IAAI0C,EAAG7E,KAAKD,QAErB,IAANiE,EAAS,CACX,IAAI4Y,EAAO,SAAc,WAAc5Y,GAAMA,EAC7ChE,KAAKsN,MAAMtN,KAAKD,OAAS,IAAM6c,EAGjC,OAAO5c,KAAK8O,SAId9G,EAAGrH,UAAUuc,MAAQ,SAAgB7Q,GACnC,OAAOrM,KAAKyP,QAAQwN,OAAO5Q,IAI7BrE,EAAGrH,UAAU0R,MAAQ,SAAgBrM,GAGnC,OAFAvG,EAAsB,kBAARuG,GACdvG,EAAOuG,EAAM,UACTA,EAAM,EAAUhG,KAAKmd,OAAOnX,GAGV,IAAlBhG,KAAKqN,SACa,IAAhBrN,KAAKD,SAAiC,EAAhBC,KAAKsN,MAAM,IAAUtH,GAC7ChG,KAAKsN,MAAM,GAAKtH,GAAuB,EAAhBhG,KAAKsN,MAAM,IAClCtN,KAAKqN,SAAW,EACTrN,OAGTA,KAAKqN,SAAW,EAChBrN,KAAKmd,MAAMnX,GACXhG,KAAKqN,SAAW,EACTrN,MAIFA,KAAKqP,OAAOrJ,IAGrBgC,EAAGrH,UAAU0O,OAAS,SAAiBrJ,GACrChG,KAAKsN,MAAM,IAAMtH,EAGjB,IAAK,IAAI9F,EAAI,EAAGA,EAAIF,KAAKD,QAAUC,KAAKsN,MAAMpN,IAAM,SAAWA,IAC7DF,KAAKsN,MAAMpN,IAAM,SACbA,IAAMF,KAAKD,OAAS,EACtBC,KAAKsN,MAAMpN,EAAI,GAAK,EAEpBF,KAAKsN,MAAMpN,EAAI,KAKnB,OAFAF,KAAKD,OAASqC,KAAKK,IAAIzC,KAAKD,OAAQG,EAAI,GAEjCF,MAITgI,EAAGrH,UAAUwc,MAAQ,SAAgBnX,GAGnC,GAFAvG,EAAsB,kBAARuG,GACdvG,EAAOuG,EAAM,UACTA,EAAM,EAAG,OAAOhG,KAAKqS,OAAOrM,GAEhC,GAAsB,IAAlBhG,KAAKqN,SAIP,OAHArN,KAAKqN,SAAW,EAChBrN,KAAKqS,MAAMrM,GACXhG,KAAKqN,SAAW,EACTrN,KAKT,GAFAA,KAAKsN,MAAM,IAAMtH,EAEG,IAAhBhG,KAAKD,QAAgBC,KAAKsN,MAAM,GAAK,EACvCtN,KAAKsN,MAAM,IAAMtN,KAAKsN,MAAM,GAC5BtN,KAAKqN,SAAW,OAGhB,IAAK,IAAInN,EAAI,EAAGA,EAAIF,KAAKD,QAAUC,KAAKsN,MAAMpN,GAAK,EAAGA,IACpDF,KAAKsN,MAAMpN,IAAM,SACjBF,KAAKsN,MAAMpN,EAAI,IAAM,EAIzB,OAAOF,KAAK8O,SAGd9G,EAAGrH,UAAUyc,KAAO,SAAepX,GACjC,OAAOhG,KAAKyP,QAAQ4C,MAAMrM,IAG5BgC,EAAGrH,UAAUyL,KAAO,SAAepG,GACjC,OAAOhG,KAAKyP,QAAQ0N,MAAMnX,IAG5BgC,EAAGrH,UAAU0c,KAAO,WAGlB,OAFArd,KAAKqN,SAAW,EAETrN,MAGTgI,EAAGrH,UAAUwR,IAAM,WACjB,OAAOnS,KAAKyP,QAAQ4N,QAGtBrV,EAAGrH,UAAU2c,aAAe,SAAuBtX,EAAKoI,EAAKxK,GAC3D,IACI1D,EAIA2O,EALA3I,EAAMF,EAAIjG,OAAS6D,EAGvB5D,KAAK0P,QAAQxJ,GAGb,IAAIqK,EAAQ,EACZ,IAAKrQ,EAAI,EAAGA,EAAI8F,EAAIjG,OAAQG,IAAK,CAC/B2O,GAA6B,EAAxB7O,KAAKsN,MAAMpN,EAAI0D,IAAc2M,EAClC,IAAIhC,GAAwB,EAAfvI,EAAIsH,MAAMpN,IAAUkO,EACjCS,GAAa,SAARN,EACLgC,GAAS1B,GAAK,KAAQN,EAAQ,SAAa,GAC3CvO,KAAKsN,MAAMpN,EAAI0D,GAAa,SAAJiL,EAE1B,KAAO3O,EAAIF,KAAKD,OAAS6D,EAAO1D,IAC9B2O,GAA6B,EAAxB7O,KAAKsN,MAAMpN,EAAI0D,IAAc2M,EAClCA,EAAQ1B,GAAK,GACb7O,KAAKsN,MAAMpN,EAAI0D,GAAa,SAAJiL,EAG1B,GAAc,IAAV0B,EAAa,OAAOvQ,KAAK8O,QAK7B,IAFArP,GAAkB,IAAX8Q,GACPA,EAAQ,EACHrQ,EAAI,EAAGA,EAAIF,KAAKD,OAAQG,IAC3B2O,IAAsB,EAAhB7O,KAAKsN,MAAMpN,IAAUqQ,EAC3BA,EAAQ1B,GAAK,GACb7O,KAAKsN,MAAMpN,GAAS,SAAJ2O,EAIlB,OAFA7O,KAAKqN,SAAW,EAETrN,KAAK8O,SAGd9G,EAAGrH,UAAU4c,SAAW,SAAmBvX,EAAKwX,GAC9C,IAAI5Z,EAAQ5D,KAAKD,OAASiG,EAAIjG,OAE1BsQ,EAAIrQ,KAAKyP,QACTrJ,EAAIJ,EAGJyX,EAA8B,EAAxBrX,EAAEkH,MAAMlH,EAAErG,OAAS,GACzB2d,EAAU1d,KAAK6R,WAAW4L,GAC9B7Z,EAAQ,GAAK8Z,EACC,IAAV9Z,IACFwC,EAAIA,EAAE2W,MAAMnZ,GACZyM,EAAEgM,OAAOzY,GACT6Z,EAA8B,EAAxBrX,EAAEkH,MAAMlH,EAAErG,OAAS,IAI3B,IACI0R,EADAwJ,EAAI5K,EAAEtQ,OAASqG,EAAErG,OAGrB,GAAa,QAATyd,EAAgB,CAClB/L,EAAI,IAAIzJ,EAAG,MACXyJ,EAAE1R,OAASkb,EAAI,EACfxJ,EAAEnE,MAAQ,IAAIrN,MAAMwR,EAAE1R,QACtB,IAAK,IAAIG,EAAI,EAAGA,EAAIuR,EAAE1R,OAAQG,IAC5BuR,EAAEnE,MAAMpN,GAAK,EAIjB,IAAIyd,EAAOtN,EAAEZ,QAAQ6N,aAAalX,EAAG,EAAG6U,GAClB,IAAlB0C,EAAKtQ,WACPgD,EAAIsN,EACAlM,IACFA,EAAEnE,MAAM2N,GAAK,IAIjB,IAAK,IAAIlV,EAAIkV,EAAI,EAAGlV,GAAK,EAAGA,IAAK,CAC/B,IAAI6X,EAAmC,UAAL,EAAxBvN,EAAE/C,MAAMlH,EAAErG,OAASgG,KACE,EAA5BsK,EAAE/C,MAAMlH,EAAErG,OAASgG,EAAI,IAI1B6X,EAAKxb,KAAKD,IAAKyb,EAAKH,EAAO,EAAG,UAE9BpN,EAAEiN,aAAalX,EAAGwX,EAAI7X,GACtB,MAAsB,IAAfsK,EAAEhD,SACPuQ,IACAvN,EAAEhD,SAAW,EACbgD,EAAEiN,aAAalX,EAAG,EAAGL,GAChBsK,EAAES,WACLT,EAAEhD,UAAY,GAGdoE,IACFA,EAAEnE,MAAMvH,GAAK6X,GAajB,OAVInM,GACFA,EAAE3C,QAEJuB,EAAEvB,QAGW,QAAT0O,GAA4B,IAAV5Z,GACpByM,EAAEsB,OAAO/N,GAGJ,CACLia,IAAKpM,GAAK,KACVvK,IAAKmJ,IAQTrI,EAAGrH,UAAUmd,OAAS,SAAiB9X,EAAKwX,EAAMO,GAGhD,OAFAte,GAAQuG,EAAI8K,UAER9Q,KAAK8Q,SACA,CACL+M,IAAK,IAAI7V,EAAG,GACZd,IAAK,IAAIc,EAAG,IAKM,IAAlBhI,KAAKqN,UAAmC,IAAjBrH,EAAIqH,UAC7B3H,EAAM1F,KAAK0S,MAAMoL,OAAO9X,EAAKwX,GAEhB,QAATA,IACFK,EAAMnY,EAAImY,IAAInL,OAGH,QAAT8K,IACFtW,EAAMxB,EAAIwB,IAAIwL,MACVqL,GAA6B,IAAjB7W,EAAImG,UAClBnG,EAAIuF,KAAKzG,IAIN,CACL6X,IAAKA,EACL3W,IAAKA,IAIa,IAAlBlH,KAAKqN,UAAmC,IAAjBrH,EAAIqH,UAC7B3H,EAAM1F,KAAK8d,OAAO9X,EAAI0M,MAAO8K,GAEhB,QAATA,IACFK,EAAMnY,EAAImY,IAAInL,OAGT,CACLmL,IAAKA,EACL3W,IAAKxB,EAAIwB,MAI0B,KAAlClH,KAAKqN,SAAWrH,EAAIqH,WACvB3H,EAAM1F,KAAK0S,MAAMoL,OAAO9X,EAAI0M,MAAO8K,GAEtB,QAATA,IACFtW,EAAMxB,EAAIwB,IAAIwL,MACVqL,GAA6B,IAAjB7W,EAAImG,UAClBnG,EAAIwM,KAAK1N,IAIN,CACL6X,IAAKnY,EAAImY,IACT3W,IAAKA,IAOLlB,EAAIjG,OAASC,KAAKD,QAAUC,KAAKyJ,IAAIzD,GAAO,EACvC,CACL6X,IAAK,IAAI7V,EAAG,GACZd,IAAKlH,MAKU,IAAfgG,EAAIjG,OACO,QAATyd,EACK,CACLK,IAAK7d,KAAKge,KAAKhY,EAAIsH,MAAM,IACzBpG,IAAK,MAII,QAATsW,EACK,CACLK,IAAK,KACL3W,IAAK,IAAIc,EAAGhI,KAAKiM,KAAKjG,EAAIsH,MAAM,MAI7B,CACLuQ,IAAK7d,KAAKge,KAAKhY,EAAIsH,MAAM,IACzBpG,IAAK,IAAIc,EAAGhI,KAAKiM,KAAKjG,EAAIsH,MAAM,MAI7BtN,KAAKud,SAASvX,EAAKwX,GAlF1B,IAAIK,EAAK3W,EAAKxB,GAsFhBsC,EAAGrH,UAAUkd,IAAM,SAAc7X,GAC/B,OAAOhG,KAAK8d,OAAO9X,EAAK,OAAO,GAAO6X,KAIxC7V,EAAGrH,UAAUuG,IAAM,SAAclB,GAC/B,OAAOhG,KAAK8d,OAAO9X,EAAK,OAAO,GAAOkB,KAGxCc,EAAGrH,UAAUsd,KAAO,SAAejY,GACjC,OAAOhG,KAAK8d,OAAO9X,EAAK,OAAO,GAAMkB,KAIvCc,EAAGrH,UAAUud,SAAW,SAAmBlY,GACzC,IAAImY,EAAKne,KAAK8d,OAAO9X,GAGrB,GAAImY,EAAGjX,IAAI4J,SAAU,OAAOqN,EAAGN,IAE/B,IAAI3W,EAA0B,IAApBiX,EAAGN,IAAIxQ,SAAiB8Q,EAAGjX,IAAIwM,KAAK1N,GAAOmY,EAAGjX,IAEpDkX,EAAOpY,EAAIgX,MAAM,GACjBqB,EAAKrY,EAAI0L,MAAM,GACfjI,EAAMvC,EAAIuC,IAAI2U,GAGlB,OAAI3U,EAAM,GAAY,IAAP4U,GAAoB,IAAR5U,EAAkB0U,EAAGN,IAGrB,IAApBM,EAAGN,IAAIxQ,SAAiB8Q,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAIxL,MAAM,IAGhErK,EAAGrH,UAAUsL,KAAO,SAAejG,GACjCvG,EAAOuG,GAAO,UAId,IAHA,IAAIgG,GAAK,GAAK,IAAMhG,EAEhBsY,EAAM,EACDpe,EAAIF,KAAKD,OAAS,EAAGG,GAAK,EAAGA,IACpCoe,GAAOtS,EAAIsS,GAAuB,EAAhBte,KAAKsN,MAAMpN,KAAW8F,EAG1C,OAAOsY,GAITtW,EAAGrH,UAAUoQ,MAAQ,SAAgB/K,GACnCvG,EAAOuG,GAAO,UAGd,IADA,IAAIuK,EAAQ,EACHrQ,EAAIF,KAAKD,OAAS,EAAGG,GAAK,EAAGA,IAAK,CACzC,IAAI2O,GAAqB,EAAhB7O,KAAKsN,MAAMpN,IAAkB,SAARqQ,EAC9BvQ,KAAKsN,MAAMpN,GAAM2O,EAAI7I,EAAO,EAC5BuK,EAAQ1B,EAAI7I,EAGd,OAAOhG,KAAK8O,SAGd9G,EAAGrH,UAAUqd,KAAO,SAAehY,GACjC,OAAOhG,KAAKyP,QAAQsB,MAAM/K,IAG5BgC,EAAGrH,UAAU4d,KAAO,SAAevS,GACjCvM,EAAsB,IAAfuM,EAAEqB,UACT5N,GAAQuM,EAAE8E,UAEV,IAAIwI,EAAItZ,KACJuZ,EAAIvN,EAAEyD,QAGR6J,EADiB,IAAfA,EAAEjM,SACAiM,EAAE2E,KAAKjS,GAEPsN,EAAE7J,QAIR,IAAI+O,EAAI,IAAIxW,EAAG,GACXyW,EAAI,IAAIzW,EAAG,GAGX0W,EAAI,IAAI1W,EAAG,GACX2W,EAAI,IAAI3W,EAAG,GAEX4W,EAAI,EAER,MAAOtF,EAAElQ,UAAYmQ,EAAEnQ,SACrBkQ,EAAE3H,OAAO,GACT4H,EAAE5H,OAAO,KACPiN,EAGJ,IAAIC,EAAKtF,EAAE9J,QACPqP,EAAKxF,EAAE7J,QAEX,OAAQ6J,EAAExI,SAAU,CAClB,IAAK,IAAI5Q,EAAI,EAAG6e,EAAK,EAAyB,KAArBzF,EAAEhM,MAAM,GAAKyR,IAAa7e,EAAI,KAAMA,EAAG6e,IAAO,GACvE,GAAI7e,EAAI,EAAG,CACToZ,EAAE3H,OAAOzR,GACT,MAAOA,KAAM,GACPse,EAAEQ,SAAWP,EAAEO,WACjBR,EAAE/R,KAAKoS,GACPJ,EAAE/K,KAAKoL,IAGTN,EAAE7M,OAAO,GACT8M,EAAE9M,OAAO,GAIb,IAAK,IAAI5L,EAAI,EAAGkZ,EAAK,EAAyB,KAArB1F,EAAEjM,MAAM,GAAK2R,IAAalZ,EAAI,KAAMA,EAAGkZ,IAAO,GACvE,GAAIlZ,EAAI,EAAG,CACTwT,EAAE5H,OAAO5L,GACT,MAAOA,KAAM,GACP2Y,EAAEM,SAAWL,EAAEK,WACjBN,EAAEjS,KAAKoS,GACPF,EAAEjL,KAAKoL,IAGTJ,EAAE/M,OAAO,GACTgN,EAAEhN,OAAO,GAIT2H,EAAE7P,IAAI8P,IAAM,GACdD,EAAE5F,KAAK6F,GACPiF,EAAE9K,KAAKgL,GACPD,EAAE/K,KAAKiL,KAEPpF,EAAE7F,KAAK4F,GACPoF,EAAEhL,KAAK8K,GACPG,EAAEjL,KAAK+K,IAIX,MAAO,CACLpO,EAAGqO,EACHtY,EAAGuY,EACHO,IAAK3F,EAAE8C,OAAOuC,KAOlB5W,EAAGrH,UAAUwe,OAAS,SAAiBnT,GACrCvM,EAAsB,IAAfuM,EAAEqB,UACT5N,GAAQuM,EAAE8E,UAEV,IAAIT,EAAIrQ,KACJoG,EAAI4F,EAAEyD,QAGRY,EADiB,IAAfA,EAAEhD,SACAgD,EAAE4N,KAAKjS,GAEPqE,EAAEZ,QAGR,IAuCI/J,EAvCA0Z,EAAK,IAAIpX,EAAG,GACZqX,EAAK,IAAIrX,EAAG,GAEZsX,EAAQlZ,EAAEqJ,QAEd,MAAOY,EAAEnE,KAAK,GAAK,GAAK9F,EAAE8F,KAAK,GAAK,EAAG,CACrC,IAAK,IAAIhM,EAAI,EAAG6e,EAAK,EAAyB,KAArB1O,EAAE/C,MAAM,GAAKyR,IAAa7e,EAAI,KAAMA,EAAG6e,IAAO,GACvE,GAAI7e,EAAI,EAAG,CACTmQ,EAAEsB,OAAOzR,GACT,MAAOA,KAAM,EACPkf,EAAGJ,SACLI,EAAG3S,KAAK6S,GAGVF,EAAGzN,OAAO,GAId,IAAK,IAAI5L,EAAI,EAAGkZ,EAAK,EAAyB,KAArB7Y,EAAEkH,MAAM,GAAK2R,IAAalZ,EAAI,KAAMA,EAAGkZ,IAAO,GACvE,GAAIlZ,EAAI,EAAG,CACTK,EAAEuL,OAAO5L,GACT,MAAOA,KAAM,EACPsZ,EAAGL,SACLK,EAAG5S,KAAK6S,GAGVD,EAAG1N,OAAO,GAIVtB,EAAE5G,IAAIrD,IAAM,GACdiK,EAAEqD,KAAKtN,GACPgZ,EAAG1L,KAAK2L,KAERjZ,EAAEsN,KAAKrD,GACPgP,EAAG3L,KAAK0L,IAeZ,OATE1Z,EADgB,IAAd2K,EAAEnE,KAAK,GACHkT,EAEAC,EAGJ3Z,EAAIwG,KAAK,GAAK,GAChBxG,EAAI+G,KAAKT,GAGJtG,GAGTsC,EAAGrH,UAAUue,IAAM,SAAclZ,GAC/B,GAAIhG,KAAK8Q,SAAU,OAAO9K,EAAImM,MAC9B,GAAInM,EAAI8K,SAAU,OAAO9Q,KAAKmS,MAE9B,IAAI9B,EAAIrQ,KAAKyP,QACTrJ,EAAIJ,EAAIyJ,QACZY,EAAEhD,SAAW,EACbjH,EAAEiH,SAAW,EAGb,IAAK,IAAIzJ,EAAQ,EAAGyM,EAAEjH,UAAYhD,EAAEgD,SAAUxF,IAC5CyM,EAAEsB,OAAO,GACTvL,EAAEuL,OAAO,GAGX,EAAG,CACD,MAAOtB,EAAEjH,SACPiH,EAAEsB,OAAO,GAEX,MAAOvL,EAAEgD,SACPhD,EAAEuL,OAAO,GAGX,IAAI3N,EAAIqM,EAAE5G,IAAIrD,GACd,GAAIpC,EAAI,EAAG,CAET,IAAIiB,EAAIoL,EACRA,EAAIjK,EACJA,EAAInB,OACC,GAAU,IAANjB,GAAyB,IAAdoC,EAAE8F,KAAK,GAC3B,MAGFmE,EAAEqD,KAAKtN,SACA,GAET,OAAOA,EAAEiW,OAAOzY,IAIlBoE,EAAGrH,UAAU4e,KAAO,SAAevZ,GACjC,OAAOhG,KAAKue,KAAKvY,GAAKqK,EAAE4N,KAAKjY,IAG/BgC,EAAGrH,UAAUyI,OAAS,WACpB,OAA+B,KAAP,EAAhBpJ,KAAKsN,MAAM,KAGrBtF,EAAGrH,UAAUqe,MAAQ,WACnB,OAA+B,KAAP,EAAhBhf,KAAKsN,MAAM,KAIrBtF,EAAGrH,UAAU+Q,MAAQ,SAAgB1L,GACnC,OAAOhG,KAAKsN,MAAM,GAAKtH,GAIzBgC,EAAGrH,UAAU6e,MAAQ,SAAgBvP,GACnCxQ,EAAsB,kBAARwQ,GACd,IAAIjM,EAAIiM,EAAM,GACVpL,GAAKoL,EAAMjM,GAAK,GAChByN,EAAI,GAAKzN,EAGb,GAAIhE,KAAKD,QAAU8E,EAGjB,OAFA7E,KAAK0P,QAAQ7K,EAAI,GACjB7E,KAAKsN,MAAMzI,IAAM4M,EACVzR,KAKT,IADA,IAAIuQ,EAAQkB,EACHvR,EAAI2E,EAAa,IAAV0L,GAAerQ,EAAIF,KAAKD,OAAQG,IAAK,CACnD,IAAI2O,EAAoB,EAAhB7O,KAAKsN,MAAMpN,GACnB2O,GAAK0B,EACLA,EAAQ1B,IAAM,GACdA,GAAK,SACL7O,KAAKsN,MAAMpN,GAAK2O,EAMlB,OAJc,IAAV0B,IACFvQ,KAAKsN,MAAMpN,GAAKqQ,EAChBvQ,KAAKD,UAEAC,MAGTgI,EAAGrH,UAAUmQ,OAAS,WACpB,OAAuB,IAAhB9Q,KAAKD,QAAkC,IAAlBC,KAAKsN,MAAM,IAGzCtF,EAAGrH,UAAUuL,KAAO,SAAelG,GACjC,IAOIN,EAPA2H,EAAWrH,EAAM,EAErB,GAAsB,IAAlBhG,KAAKqN,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBrN,KAAKqN,UAAkBA,EAAU,OAAO,EAK5C,GAHArN,KAAK8O,QAGD9O,KAAKD,OAAS,EAChB2F,EAAM,MACD,CACD2H,IACFrH,GAAOA,GAGTvG,EAAOuG,GAAO,SAAW,qBAEzB,IAAI6I,EAAoB,EAAhB7O,KAAKsN,MAAM,GACnB5H,EAAMmJ,IAAM7I,EAAM,EAAI6I,EAAI7I,GAAO,EAAI,EAEvC,OAAsB,IAAlBhG,KAAKqN,SAA8B,GAAN3H,EAC1BA,GAOTsC,EAAGrH,UAAU8I,IAAM,SAAczD,GAC/B,GAAsB,IAAlBhG,KAAKqN,UAAmC,IAAjBrH,EAAIqH,SAAgB,OAAQ,EACvD,GAAsB,IAAlBrN,KAAKqN,UAAmC,IAAjBrH,EAAIqH,SAAgB,OAAO,EAEtD,IAAI3H,EAAM1F,KAAKyf,KAAKzZ,GACpB,OAAsB,IAAlBhG,KAAKqN,SAA8B,GAAN3H,EAC1BA,GAITsC,EAAGrH,UAAU8e,KAAO,SAAezZ,GAEjC,GAAIhG,KAAKD,OAASiG,EAAIjG,OAAQ,OAAO,EACrC,GAAIC,KAAKD,OAASiG,EAAIjG,OAAQ,OAAQ,EAGtC,IADA,IAAI2F,EAAM,EACDxF,EAAIF,KAAKD,OAAS,EAAGG,GAAK,EAAGA,IAAK,CACzC,IAAImQ,EAAoB,EAAhBrQ,KAAKsN,MAAMpN,GACfkG,EAAmB,EAAfJ,EAAIsH,MAAMpN,GAElB,GAAImQ,IAAMjK,EAAV,CACIiK,EAAIjK,EACNV,GAAO,EACE2K,EAAIjK,IACbV,EAAM,GAER,OAEF,OAAOA,GAGTsC,EAAGrH,UAAU+e,IAAM,SAAc1Z,GAC/B,OAA0B,IAAnBhG,KAAKkM,KAAKlG,IAGnBgC,EAAGrH,UAAUgf,GAAK,SAAa3Z,GAC7B,OAAyB,IAAlBhG,KAAKyJ,IAAIzD,IAGlBgC,EAAGrH,UAAUif,KAAO,SAAe5Z,GACjC,OAAOhG,KAAKkM,KAAKlG,IAAQ,GAG3BgC,EAAGrH,UAAUkf,IAAM,SAAc7Z,GAC/B,OAAOhG,KAAKyJ,IAAIzD,IAAQ,GAG1BgC,EAAGrH,UAAUmf,IAAM,SAAc9Z,GAC/B,OAA2B,IAApBhG,KAAKkM,KAAKlG,IAGnBgC,EAAGrH,UAAUof,GAAK,SAAa/Z,GAC7B,OAA0B,IAAnBhG,KAAKyJ,IAAIzD,IAGlBgC,EAAGrH,UAAUqf,KAAO,SAAeha,GACjC,OAAOhG,KAAKkM,KAAKlG,IAAQ,GAG3BgC,EAAGrH,UAAUsf,IAAM,SAAcja,GAC/B,OAAOhG,KAAKyJ,IAAIzD,IAAQ,GAG1BgC,EAAGrH,UAAUuf,IAAM,SAAcla,GAC/B,OAA0B,IAAnBhG,KAAKkM,KAAKlG,IAGnBgC,EAAGrH,UAAUwf,GAAK,SAAana,GAC7B,OAAyB,IAAlBhG,KAAKyJ,IAAIzD,IAOlBgC,EAAGmE,IAAM,SAAcnG,GACrB,OAAO,IAAIoa,EAAIpa,IAGjBgC,EAAGrH,UAAUgK,MAAQ,SAAgB0V,GAGnC,OAFA5gB,GAAQO,KAAKmM,IAAK,yCAClB1M,EAAyB,IAAlBO,KAAKqN,SAAgB,iCACrBgT,EAAIC,UAAUtgB,MAAMugB,UAAUF,IAGvCrY,EAAGrH,UAAUkK,QAAU,WAErB,OADApL,EAAOO,KAAKmM,IAAK,wDACVnM,KAAKmM,IAAIqU,YAAYxgB,OAG9BgI,EAAGrH,UAAU4f,UAAY,SAAoBF,GAE3C,OADArgB,KAAKmM,IAAMkU,EACJrgB,MAGTgI,EAAGrH,UAAU8f,SAAW,SAAmBJ,GAEzC,OADA5gB,GAAQO,KAAKmM,IAAK,yCACXnM,KAAKugB,UAAUF,IAGxBrY,EAAGrH,UAAU+f,OAAS,SAAiB1a,GAErC,OADAvG,EAAOO,KAAKmM,IAAK,sCACVnM,KAAKmM,IAAIwH,IAAI3T,KAAMgG,IAG5BgC,EAAGrH,UAAUggB,QAAU,SAAkB3a,GAEvC,OADAvG,EAAOO,KAAKmM,IAAK,uCACVnM,KAAKmM,IAAIM,KAAKzM,KAAMgG,IAG7BgC,EAAGrH,UAAUigB,OAAS,SAAiB5a,GAErC,OADAvG,EAAOO,KAAKmM,IAAK,sCACVnM,KAAKmM,IAAIyH,IAAI5T,KAAMgG,IAG5BgC,EAAGrH,UAAUkgB,QAAU,SAAkB7a,GAEvC,OADAvG,EAAOO,KAAKmM,IAAK,uCACVnM,KAAKmM,IAAIuH,KAAK1T,KAAMgG,IAG7BgC,EAAGrH,UAAUmgB,OAAS,SAAiB9a,GAErC,OADAvG,EAAOO,KAAKmM,IAAK,sCACVnM,KAAKmM,IAAI4U,IAAI/gB,KAAMgG,IAG5BgC,EAAGrH,UAAUqgB,OAAS,SAAiBhb,GAGrC,OAFAvG,EAAOO,KAAKmM,IAAK,sCACjBnM,KAAKmM,IAAI8U,SAASjhB,KAAMgG,GACjBhG,KAAKmM,IAAIiC,IAAIpO,KAAMgG,IAG5BgC,EAAGrH,UAAUugB,QAAU,SAAkBlb,GAGvC,OAFAvG,EAAOO,KAAKmM,IAAK,sCACjBnM,KAAKmM,IAAI8U,SAASjhB,KAAMgG,GACjBhG,KAAKmM,IAAIyL,KAAK5X,KAAMgG,IAG7BgC,EAAGrH,UAAUwgB,OAAS,WAGpB,OAFA1hB,EAAOO,KAAKmM,IAAK,sCACjBnM,KAAKmM,IAAIiV,SAASphB,MACXA,KAAKmM,IAAIgQ,IAAInc,OAGtBgI,EAAGrH,UAAU0gB,QAAU,WAGrB,OAFA5hB,EAAOO,KAAKmM,IAAK,uCACjBnM,KAAKmM,IAAIiV,SAASphB,MACXA,KAAKmM,IAAIiQ,KAAKpc,OAIvBgI,EAAGrH,UAAU2gB,QAAU,WAGrB,OAFA7hB,EAAOO,KAAKmM,IAAK,uCACjBnM,KAAKmM,IAAIiV,SAASphB,MACXA,KAAKmM,IAAIJ,KAAK/L,OAGvBgI,EAAGrH,UAAU4gB,QAAU,WAGrB,OAFA9hB,EAAOO,KAAKmM,IAAK,uCACjBnM,KAAKmM,IAAIiV,SAASphB,MACXA,KAAKmM,IAAIoT,KAAKvf,OAIvBgI,EAAGrH,UAAU6gB,OAAS,WAGpB,OAFA/hB,EAAOO,KAAKmM,IAAK,sCACjBnM,KAAKmM,IAAIiV,SAASphB,MACXA,KAAKmM,IAAIuG,IAAI1S,OAGtBgI,EAAGrH,UAAUiK,OAAS,SAAiB5E,GAGrC,OAFAvG,EAAOO,KAAKmM,MAAQnG,EAAImG,IAAK,qBAC7BnM,KAAKmM,IAAIiV,SAASphB,MACXA,KAAKmM,IAAImD,IAAItP,KAAMgG,IAI5B,IAAIe,EAAS,CACX0a,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQC,EAAM9V,GAErBhM,KAAK8hB,KAAOA,EACZ9hB,KAAKgM,EAAI,IAAIhE,EAAGgE,EAAG,IACnBhM,KAAKgb,EAAIhb,KAAKgM,EAAEO,YAChBvM,KAAK8L,EAAI,IAAI9D,EAAG,GAAGqU,OAAOrc,KAAKgb,GAAGtH,KAAK1T,KAAKgM,GAE5ChM,KAAKoD,IAAMpD,KAAK+hB,OAiDlB,SAASC,IACPH,EAAOvhB,KACLN,KACA,OACA,2EA+DJ,SAASiiB,IACPJ,EAAOvhB,KACLN,KACA,OACA,kEAIJ,SAASkiB,IACPL,EAAOvhB,KACLN,KACA,OACA,yDAIJ,SAASmiB,IAEPN,EAAOvhB,KACLN,KACA,QACA,uEA8CJ,SAASogB,EAAKnF,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAI9T,EAAQa,EAAG6B,OAAOoR,GACtBjb,KAAKib,EAAI9T,EAAM6E,EACfhM,KAAKmH,MAAQA,OAEb1H,EAAOwb,EAAEyE,IAAI,GAAI,kCACjB1f,KAAKib,EAAIA,EACTjb,KAAKmH,MAAQ,KAkOjB,SAASib,EAAMnH,GACbmF,EAAI9f,KAAKN,KAAMib,GAEfjb,KAAK4D,MAAQ5D,KAAKib,EAAE1O,YAChBvM,KAAK4D,MAAQ,KAAO,IACtB5D,KAAK4D,OAAS,GAAM5D,KAAK4D,MAAQ,IAGnC5D,KAAKgE,EAAI,IAAIgE,EAAG,GAAGqU,OAAOrc,KAAK4D,OAC/B5D,KAAKqe,GAAKre,KAAKqiB,KAAKriB,KAAKgE,EAAEmY,OAC3Bnc,KAAKsiB,KAAOtiB,KAAKgE,EAAEmb,OAAOnf,KAAKib,GAE/Bjb,KAAKuiB,KAAOviB,KAAKsiB,KAAKlU,IAAIpO,KAAKgE,GAAGmZ,MAAM,GAAGU,IAAI7d,KAAKib,GACpDjb,KAAKuiB,KAAOviB,KAAKuiB,KAAKtE,KAAKje,KAAKgE,GAChChE,KAAKuiB,KAAOviB,KAAKgE,EAAE4P,IAAI5T,KAAKuiB,MA5a9BV,EAAOlhB,UAAUohB,KAAO,WACtB,IAAI3e,EAAM,IAAI4E,EAAG,MAEjB,OADA5E,EAAIkK,MAAQ,IAAIrN,MAAMmC,KAAKM,KAAK1C,KAAKgb,EAAI,KAClC5X,GAGTye,EAAOlhB,UAAU6hB,QAAU,SAAkBxc,GAG3C,IACIyc,EADAze,EAAIgC,EAGR,GACEhG,KAAK0iB,MAAM1e,EAAGhE,KAAKoD,KACnBY,EAAIhE,KAAK2iB,MAAM3e,GACfA,EAAIA,EAAEyI,KAAKzM,KAAKoD,KAChBqf,EAAOze,EAAEuI,kBACFkW,EAAOziB,KAAKgb,GAErB,IAAIvR,EAAMgZ,EAAOziB,KAAKgb,GAAK,EAAIhX,EAAEyb,KAAKzf,KAAKgM,GAgB3C,OAfY,IAARvC,GACFzF,EAAEsJ,MAAM,GAAK,EACbtJ,EAAEjE,OAAS,GACF0J,EAAM,EACfzF,EAAE0P,KAAK1T,KAAKgM,QAEIpE,IAAZ5D,EAAE8K,MAEJ9K,EAAE8K,QAGF9K,EAAE4e,SAIC5e,GAGT6d,EAAOlhB,UAAU+hB,MAAQ,SAAgBG,EAAO3hB,GAC9C2hB,EAAMlR,OAAO3R,KAAKgb,EAAG,EAAG9Z,IAG1B2gB,EAAOlhB,UAAUgiB,MAAQ,SAAgB3c,GACvC,OAAOA,EAAI4R,KAAK5X,KAAK8L,IASvBpM,EAASsiB,EAAMH,GAEfG,EAAKrhB,UAAU+hB,MAAQ,SAAgBG,EAAOC,GAK5C,IAHA,IAAIlG,EAAO,QAEPmG,EAAS3gB,KAAKD,IAAI0gB,EAAM9iB,OAAQ,GAC3BG,EAAI,EAAGA,EAAI6iB,EAAQ7iB,IAC1B4iB,EAAOxV,MAAMpN,GAAK2iB,EAAMvV,MAAMpN,GAIhC,GAFA4iB,EAAO/iB,OAASgjB,EAEZF,EAAM9iB,QAAU,EAGlB,OAFA8iB,EAAMvV,MAAM,GAAK,OACjBuV,EAAM9iB,OAAS,GAKjB,IAAIijB,EAAOH,EAAMvV,MAAM,GAGvB,IAFAwV,EAAOxV,MAAMwV,EAAO/iB,UAAYijB,EAAOpG,EAElC1c,EAAI,GAAIA,EAAI2iB,EAAM9iB,OAAQG,IAAK,CAClC,IAAI+iB,EAAwB,EAAjBJ,EAAMvV,MAAMpN,GACvB2iB,EAAMvV,MAAMpN,EAAI,KAAQ+iB,EAAOrG,IAAS,EAAMoG,IAAS,GACvDA,EAAOC,EAETD,KAAU,GACVH,EAAMvV,MAAMpN,EAAI,IAAM8iB,EACT,IAATA,GAAcH,EAAM9iB,OAAS,GAC/B8iB,EAAM9iB,QAAU,GAEhB8iB,EAAM9iB,QAAU,GAIpBiiB,EAAKrhB,UAAUgiB,MAAQ,SAAgB3c,GAErCA,EAAIsH,MAAMtH,EAAIjG,QAAU,EACxBiG,EAAIsH,MAAMtH,EAAIjG,OAAS,GAAK,EAC5BiG,EAAIjG,QAAU,EAId,IADA,IAAIuQ,EAAK,EACApQ,EAAI,EAAGA,EAAI8F,EAAIjG,OAAQG,IAAK,CACnC,IAAI2O,EAAmB,EAAf7I,EAAIsH,MAAMpN,GAClBoQ,GAAU,IAAJzB,EACN7I,EAAIsH,MAAMpN,GAAU,SAALoQ,EACfA,EAAS,GAAJzB,GAAayB,EAAK,SAAa,GAUtC,OANkC,IAA9BtK,EAAIsH,MAAMtH,EAAIjG,OAAS,KACzBiG,EAAIjG,SAC8B,IAA9BiG,EAAIsH,MAAMtH,EAAIjG,OAAS,IACzBiG,EAAIjG,UAGDiG,GASTtG,EAASuiB,EAAMJ,GAQfniB,EAASwiB,EAAML,GASfniB,EAASyiB,EAAQN,GAEjBM,EAAOxhB,UAAUgiB,MAAQ,SAAgB3c,GAGvC,IADA,IAAIuK,EAAQ,EACHrQ,EAAI,EAAGA,EAAI8F,EAAIjG,OAAQG,IAAK,CACnC,IAAI6R,EAA0B,IAAL,EAAf/L,EAAIsH,MAAMpN,IAAiBqQ,EACjCD,EAAU,SAALyB,EACTA,KAAQ,GAER/L,EAAIsH,MAAMpN,GAAKoQ,EACfC,EAAQwB,EAKV,OAHc,IAAVxB,IACFvK,EAAIsH,MAAMtH,EAAIjG,UAAYwQ,GAErBvK,GAITgC,EAAG6B,OAAS,SAAgBiY,GAE1B,GAAI/a,EAAO+a,GAAO,OAAO/a,EAAO+a,GAEhC,IAAI3a,EACJ,GAAa,SAAT2a,EACF3a,EAAQ,IAAI6a,OACP,GAAa,SAATF,EACT3a,EAAQ,IAAI8a,OACP,GAAa,SAATH,EACT3a,EAAQ,IAAI+a,MACP,IAAa,WAATJ,EAGT,MAAM,IAAIjV,MAAM,iBAAmBiV,GAFnC3a,EAAQ,IAAIgb,EAMd,OAFApb,EAAO+a,GAAQ3a,EAERA,GAkBTiZ,EAAIzf,UAAUygB,SAAW,SAAmB/Q,GAC1C5Q,EAAsB,IAAf4Q,EAAEhD,SAAgB,iCACzB5N,EAAO4Q,EAAElE,IAAK,oCAGhBiU,EAAIzf,UAAUsgB,SAAW,SAAmB5Q,EAAGjK,GAC7C3G,EAAqC,KAA7B4Q,EAAEhD,SAAWjH,EAAEiH,UAAiB,iCACxC5N,EAAO4Q,EAAElE,KAAOkE,EAAElE,MAAQ/F,EAAE+F,IAC1B,oCAGJiU,EAAIzf,UAAU0hB,KAAO,SAAehS,GAClC,OAAIrQ,KAAKmH,MAAcnH,KAAKmH,MAAMqb,QAAQnS,GAAGkQ,UAAUvgB,MAChDqQ,EAAE4N,KAAKje,KAAKib,GAAGsF,UAAUvgB,OAGlCogB,EAAIzf,UAAU+R,IAAM,SAAcrC,GAChC,OAAIA,EAAES,SACGT,EAAEZ,QAGJzP,KAAKib,EAAErH,IAAIvD,GAAGkQ,UAAUvgB,OAGjCogB,EAAIzf,UAAUgT,IAAM,SAActD,EAAGjK,GACnCpG,KAAKihB,SAAS5Q,EAAGjK,GAEjB,IAAIV,EAAM2K,EAAEsD,IAAIvN,GAIhB,OAHIV,EAAI+D,IAAIzJ,KAAKib,IAAM,GACrBvV,EAAIgO,KAAK1T,KAAKib,GAETvV,EAAI6a,UAAUvgB,OAGvBogB,EAAIzf,UAAU8L,KAAO,SAAe4D,EAAGjK,GACrCpG,KAAKihB,SAAS5Q,EAAGjK,GAEjB,IAAIV,EAAM2K,EAAE5D,KAAKrG,GAIjB,OAHIV,EAAI+D,IAAIzJ,KAAKib,IAAM,GACrBvV,EAAIgO,KAAK1T,KAAKib,GAETvV,GAGT0a,EAAIzf,UAAUiT,IAAM,SAAcvD,EAAGjK,GACnCpG,KAAKihB,SAAS5Q,EAAGjK,GAEjB,IAAIV,EAAM2K,EAAEuD,IAAIxN,GAIhB,OAHIV,EAAIwG,KAAK,GAAK,GAChBxG,EAAI+G,KAAKzM,KAAKib,GAETvV,EAAI6a,UAAUvgB,OAGvBogB,EAAIzf,UAAU+S,KAAO,SAAerD,EAAGjK,GACrCpG,KAAKihB,SAAS5Q,EAAGjK,GAEjB,IAAIV,EAAM2K,EAAEqD,KAAKtN,GAIjB,OAHIV,EAAIwG,KAAK,GAAK,GAChBxG,EAAI+G,KAAKzM,KAAKib,GAETvV,GAGT0a,EAAIzf,UAAUogB,IAAM,SAAc1Q,EAAGrK,GAEnC,OADAhG,KAAKohB,SAAS/Q,GACPrQ,KAAKqiB,KAAKhS,EAAE0M,MAAM/W,KAG3Boa,EAAIzf,UAAUiX,KAAO,SAAevH,EAAGjK,GAErC,OADApG,KAAKihB,SAAS5Q,EAAGjK,GACVpG,KAAKqiB,KAAKhS,EAAEuH,KAAKxR,KAG1Bga,EAAIzf,UAAUyN,IAAM,SAAciC,EAAGjK,GAEnC,OADApG,KAAKihB,SAAS5Q,EAAGjK,GACVpG,KAAKqiB,KAAKhS,EAAEjC,IAAIhI,KAGzBga,EAAIzf,UAAUyb,KAAO,SAAe/L,GAClC,OAAOrQ,KAAK4X,KAAKvH,EAAGA,EAAEZ,UAGxB2Q,EAAIzf,UAAUwb,IAAM,SAAc9L,GAChC,OAAOrQ,KAAKoO,IAAIiC,EAAGA,IAGrB+P,EAAIzf,UAAUoL,KAAO,SAAesE,GAClC,GAAIA,EAAES,SAAU,OAAOT,EAAEZ,QAEzB,IAAIyT,EAAOljB,KAAKib,EAAEvJ,MAAM,GAIxB,GAHAjS,EAAOyjB,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAI5T,EAAMtP,KAAKib,EAAEtH,IAAI,IAAI3L,EAAG,IAAI2J,OAAO,GACvC,OAAO3R,KAAKsP,IAAIe,EAAGf,GAMrB,IAAImC,EAAIzR,KAAKib,EAAE7O,KAAK,GAChBvH,EAAI,EACR,OAAQ4M,EAAEX,UAA2B,IAAfW,EAAEC,MAAM,GAC5B7M,IACA4M,EAAEE,OAAO,GAEXlS,GAAQgS,EAAEX,UAEV,IAAIqS,EAAM,IAAInb,EAAG,GAAG2C,MAAM3K,MACtBojB,EAAOD,EAAI3B,SAIX6B,EAAOrjB,KAAKib,EAAE7O,KAAK,GAAGuF,OAAO,GAC7B2R,EAAItjB,KAAKib,EAAE1O,YACf+W,EAAI,IAAItb,EAAG,EAAIsb,EAAIA,GAAG3Y,MAAM3K,MAE5B,MAAuC,IAAhCA,KAAKsP,IAAIgU,EAAGD,GAAM5Z,IAAI2Z,GAC3BE,EAAE3C,QAAQyC,GAGZ,IAAIvV,EAAI7N,KAAKsP,IAAIgU,EAAG7R,GAChBzN,EAAIhE,KAAKsP,IAAIe,EAAGoB,EAAE2L,KAAK,GAAGzL,OAAO,IACjC1M,EAAIjF,KAAKsP,IAAIe,EAAGoB,GAChBwJ,EAAIpW,EACR,MAAsB,IAAfI,EAAEwE,IAAI0Z,GAAY,CAEvB,IADA,IAAI/f,EAAM6B,EACD/E,EAAI,EAAoB,IAAjBkD,EAAIqG,IAAI0Z,GAAYjjB,IAClCkD,EAAMA,EAAI+d,SAEZ1hB,EAAOS,EAAI+a,GACX,IAAI7U,EAAIpG,KAAKsP,IAAIzB,EAAG,IAAI7F,EAAG,GAAGqU,OAAOpB,EAAI/a,EAAI,IAE7C8D,EAAIA,EAAEgd,OAAO5a,GACbyH,EAAIzH,EAAE+a,SACNlc,EAAIA,EAAE+b,OAAOnT,GACboN,EAAI/a,EAGN,OAAO8D,GAGToc,EAAIzf,UAAU4e,KAAO,SAAelP,GAClC,IAAIkT,EAAMlT,EAAE8O,OAAOnf,KAAKib,GACxB,OAAqB,IAAjBsI,EAAIlW,UACNkW,EAAIlW,SAAW,EACRrN,KAAKqiB,KAAKkB,GAAK/B,UAEfxhB,KAAKqiB,KAAKkB,IAIrBnD,EAAIzf,UAAU2O,IAAM,SAAce,EAAGrK,GACnC,GAAIA,EAAI8K,SAAU,OAAO,IAAI9I,EAAG,GAAG2C,MAAM3K,MACzC,GAAoB,IAAhBgG,EAAIkG,KAAK,GAAU,OAAOmE,EAAEZ,QAEhC,IAAI+T,EAAa,EACbC,EAAM,IAAIxjB,MAAM,GAAKujB,GACzBC,EAAI,GAAK,IAAIzb,EAAG,GAAG2C,MAAM3K,MACzByjB,EAAI,GAAKpT,EACT,IAAK,IAAInQ,EAAI,EAAGA,EAAIujB,EAAI1jB,OAAQG,IAC9BujB,EAAIvjB,GAAKF,KAAKoO,IAAIqV,EAAIvjB,EAAI,GAAImQ,GAGhC,IAAI3K,EAAM+d,EAAI,GACVC,EAAU,EACVC,EAAa,EACbzV,EAAQlI,EAAIuG,YAAc,GAK9B,IAJc,IAAV2B,IACFA,EAAQ,IAGLhO,EAAI8F,EAAIjG,OAAS,EAAGG,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIiP,EAAOnJ,EAAIsH,MAAMpN,GACZ6F,EAAImI,EAAQ,EAAGnI,GAAK,EAAGA,IAAK,CACnC,IAAIkK,EAAOd,GAAQpJ,EAAK,EACpBL,IAAQ+d,EAAI,KACd/d,EAAM1F,KAAKmc,IAAIzW,IAGL,IAARuK,GAAyB,IAAZyT,GAKjBA,IAAY,EACZA,GAAWzT,EACX0T,KACIA,IAAeH,GAAqB,IAANtjB,GAAiB,IAAN6F,KAE7CL,EAAM1F,KAAKoO,IAAI1I,EAAK+d,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBzV,EAAQ,GAGV,OAAOxI,GAGT0a,EAAIzf,UAAU2f,UAAY,SAAoBta,GAC5C,IAAIhC,EAAIgC,EAAIiY,KAAKje,KAAKib,GAEtB,OAAOjX,IAAMgC,EAAMhC,EAAEyL,QAAUzL,GAGjCoc,EAAIzf,UAAU6f,YAAc,SAAsBxa,GAChD,IAAIN,EAAMM,EAAIyJ,QAEd,OADA/J,EAAIyG,IAAM,KACHzG,GAOTsC,EAAG8B,KAAO,SAAe9D,GACvB,OAAO,IAAIoc,EAAKpc,IAmBlBtG,EAAS0iB,EAAMhC,GAEfgC,EAAKzhB,UAAU2f,UAAY,SAAoBta,GAC7C,OAAOhG,KAAKqiB,KAAKrc,EAAI+W,MAAM/c,KAAK4D,SAGlCwe,EAAKzhB,UAAU6f,YAAc,SAAsBxa,GACjD,IAAIhC,EAAIhE,KAAKqiB,KAAKrc,EAAIoI,IAAIpO,KAAKsiB,OAE/B,OADAte,EAAEmI,IAAM,KACDnI,GAGToe,EAAKzhB,UAAUiX,KAAO,SAAevH,EAAGjK,GACtC,GAAIiK,EAAES,UAAY1K,EAAE0K,SAGlB,OAFAT,EAAE/C,MAAM,GAAK,EACb+C,EAAEtQ,OAAS,EACJsQ,EAGT,IAAIpL,EAAIoL,EAAEuH,KAAKxR,GACXyH,EAAI5I,EAAEiY,MAAMld,KAAK4D,OAAOwK,IAAIpO,KAAKuiB,MAAMtF,OAAOjd,KAAK4D,OAAOwK,IAAIpO,KAAKib,GACnE2I,EAAI3e,EAAEyO,KAAK7F,GAAG8D,OAAO3R,KAAK4D,OAC1B8B,EAAMke,EAQV,OANIA,EAAEna,IAAIzJ,KAAKib,IAAM,EACnBvV,EAAMke,EAAElQ,KAAK1T,KAAKib,GACT2I,EAAE1X,KAAK,GAAK,IACrBxG,EAAMke,EAAEnX,KAAKzM,KAAKib,IAGbvV,EAAI6a,UAAUvgB,OAGvBoiB,EAAKzhB,UAAUyN,IAAM,SAAciC,EAAGjK,GACpC,GAAIiK,EAAES,UAAY1K,EAAE0K,SAAU,OAAO,IAAI9I,EAAG,GAAGuY,UAAUvgB,MAEzD,IAAIiF,EAAIoL,EAAEjC,IAAIhI,GACVyH,EAAI5I,EAAEiY,MAAMld,KAAK4D,OAAOwK,IAAIpO,KAAKuiB,MAAMtF,OAAOjd,KAAK4D,OAAOwK,IAAIpO,KAAKib,GACnE2I,EAAI3e,EAAEyO,KAAK7F,GAAG8D,OAAO3R,KAAK4D,OAC1B8B,EAAMke,EAOV,OANIA,EAAEna,IAAIzJ,KAAKib,IAAM,EACnBvV,EAAMke,EAAElQ,KAAK1T,KAAKib,GACT2I,EAAE1X,KAAK,GAAK,IACrBxG,EAAMke,EAAEnX,KAAKzM,KAAKib,IAGbvV,EAAI6a,UAAUvgB,OAGvBoiB,EAAKzhB,UAAU4e,KAAO,SAAelP,GAEnC,IAAI3K,EAAM1F,KAAKqiB,KAAKhS,EAAE8O,OAAOnf,KAAKib,GAAG7M,IAAIpO,KAAKqe,KAC9C,OAAO3Y,EAAI6a,UAAUvgB,OAn3GzB,CAq3GoC4B,EAAQ5B,O,kCCn3G5C,IAAIoH,EAAS,eAETyc,EAAsB,EAAQ,MAE9BC,EAAY,IACfC,EAAkB,EAClBC,EAAgB,GAChBC,EAAU,GACVC,EAAU,EACVC,EAAmBF,EAAUD,EAAkBD,GAAmB,EAClEK,EAAkBF,EAAWH,GAAmB,EAEjD,SAASM,EAAUC,GAClB,OAAOA,EACL5V,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,KAGlB,SAAS6V,EAAkBC,GAC1B,GAAIpd,EAAOO,SAAS6c,GACnB,OAAOA,EACD,GAAI,kBAAoBA,EAC9B,OAAOpd,EAAOqd,KAAKD,EAAW,UAG/B,MAAM,IAAIE,UAAU,uDAGrB,SAASC,EAAUH,EAAWI,GAC7BJ,EAAYD,EAAkBC,GAC9B,IAAIK,EAAahB,EAAoBe,GAIjCE,EAAwBD,EAAa,EAErCE,EAAcP,EAAUzkB,OAExBilB,EAAS,EACb,GAAIR,EAAUQ,OAAcb,EAC3B,MAAM,IAAItX,MAAM,iCAGjB,IAAIoY,EAAYT,EAAUQ,KAK1B,GAJIC,KAA2B,EAAZnB,KAClBmB,EAAYT,EAAUQ,MAGnBD,EAAcC,EAASC,EAC1B,MAAM,IAAIpY,MAAM,8BAAgCoY,EAAY,aAAeF,EAAcC,GAAU,eAGpG,GAAIR,EAAUQ,OAAcZ,EAC3B,MAAM,IAAIvX,MAAM,yCAGjB,IAAIqY,EAAUV,EAAUQ,KAExB,GAAID,EAAcC,EAAS,EAAIE,EAC9B,MAAM,IAAIrY,MAAM,4BAA8BqY,EAAU,aAAeH,EAAcC,EAAS,GAAK,eAGpG,GAAIF,EAAwBI,EAC3B,MAAM,IAAIrY,MAAM,4BAA8BqY,EAAU,cAAgBJ,EAAwB,mBAGjG,IAAIK,EAAUH,EAGd,GAFAA,GAAUE,EAENV,EAAUQ,OAAcZ,EAC3B,MAAM,IAAIvX,MAAM,yCAGjB,IAAIuY,EAAUZ,EAAUQ,KAExB,GAAID,EAAcC,IAAWI,EAC5B,MAAM,IAAIvY,MAAM,4BAA8BuY,EAAU,iBAAmBL,EAAcC,GAAU,KAGpG,GAAIF,EAAwBM,EAC3B,MAAM,IAAIvY,MAAM,4BAA8BuY,EAAU,cAAgBN,EAAwB,mBAGjG,IAAIO,EAAUL,EAGd,GAFAA,GAAUI,EAENJ,IAAWD,EACd,MAAM,IAAIlY,MAAM,4CAA8CkY,EAAcC,GAAU,kBAGvF,IAAIM,EAAWT,EAAaK,EAC3BK,EAAWV,EAAaO,EAErBI,EAAMpe,EAAOqe,YAAYH,EAAWJ,EAAUK,EAAWH,GAE7D,IAAKJ,EAAS,EAAGA,EAASM,IAAYN,EACrCQ,EAAIR,GAAU,EAEfR,EAAUjV,KAAKiW,EAAKR,EAAQG,EAAU/iB,KAAKK,KAAK6iB,EAAU,GAAIH,EAAUD,GAExEF,EAASH,EAET,IAAK,IAAI9Q,EAAIiR,EAAQA,EAASjR,EAAIwR,IAAYP,EAC7CQ,EAAIR,GAAU,EAOf,OALAR,EAAUjV,KAAKiW,EAAKR,EAAQK,EAAUjjB,KAAKK,KAAK8iB,EAAU,GAAIF,EAAUD,GAExEI,EAAMA,EAAI7e,SAAS,UACnB6e,EAAMnB,EAAUmB,GAETA,EAGR,SAASE,EAAavb,EAAK+D,EAAOyX,GACjC,IAAIhV,EAAU,EACd,MAAOzC,EAAQyC,EAAUgV,GAAiC,IAAzBxb,EAAI+D,EAAQyC,KAC1CA,EAGH,IAAIiV,EAAYzb,EAAI+D,EAAQyC,IAAYmT,EAKxC,OAJI8B,KACDjV,EAGIA,EAGR,SAASkV,EAAUrB,EAAWI,GAC7BJ,EAAYD,EAAkBC,GAC9B,IAAIK,EAAahB,EAAoBe,GAEjCkB,EAAiBtB,EAAUzkB,OAC/B,GAAI+lB,IAAgC,EAAbjB,EACtB,MAAM,IAAIH,UAAU,IAAME,EAAM,yBAAwC,EAAbC,EAAiB,iBAAmBiB,EAAiB,KAGjH,IAAIR,EAAWI,EAAalB,EAAW,EAAGK,GACtCU,EAAWG,EAAalB,EAAWK,EAAYL,EAAUzkB,QACzDmlB,EAAUL,EAAaS,EACvBF,EAAUP,EAAaU,EAEvBQ,EAAU,EAAQb,EAAU,EAAI,EAAIE,EAEpCY,EAAcD,EAAUjC,EAExB0B,EAAMpe,EAAOqe,aAAaO,EAAc,EAAI,GAAKD,GAEjDf,EAAS,EA8Bb,OA7BAQ,EAAIR,KAAYb,EACZ6B,EAGHR,EAAIR,KAAYe,GAIhBP,EAAIR,KAAwB,EAAZlB,EAEhB0B,EAAIR,KAAsB,IAAVe,GAEjBP,EAAIR,KAAYZ,EAChBoB,EAAIR,KAAYE,EACZI,EAAW,GACdE,EAAIR,KAAY,EAChBA,GAAUR,EAAUjV,KAAKiW,EAAKR,EAAQ,EAAGH,IAEzCG,GAAUR,EAAUjV,KAAKiW,EAAKR,EAAQM,EAAUT,GAEjDW,EAAIR,KAAYZ,EAChBoB,EAAIR,KAAYI,EACZG,EAAW,GACdC,EAAIR,KAAY,EAChBR,EAAUjV,KAAKiW,EAAKR,EAAQH,IAE5BL,EAAUjV,KAAKiW,EAAKR,EAAQH,EAAaU,GAGnCC,EAGR5jB,EAAOzC,QAAU,CAChBwlB,UAAWA,EACXkB,UAAWA,I,8BCvLZ,SAASI,EAAaC,GACrB,IAAIC,GAAWD,EAAU,EAAK,IAAMA,EAAU,IAAM,EAAI,EAAI,GAC5D,OAAOC,EAGR,IAAIC,EAAmB,CACtBC,MAAOJ,EAAa,KACpBK,MAAOL,EAAa,KACpBM,MAAON,EAAa,MAGrB,SAASpC,EAAoBe,GAC5B,IAAIC,EAAauB,EAAiBxB,GAClC,GAAIC,EACH,OAAOA,EAGR,MAAM,IAAIhY,MAAM,sBAAwB+X,EAAM,KAG/ChjB,EAAOzC,QAAU0kB,G","sources":["webpack://vendo/./node_modules/des.js/lib/des.js","webpack://vendo/./node_modules/des.js/lib/des/cbc.js","webpack://vendo/./node_modules/des.js/lib/des/cipher.js","webpack://vendo/./node_modules/des.js/lib/des/des.js","webpack://vendo/./node_modules/des.js/lib/des/ede.js","webpack://vendo/./node_modules/des.js/lib/des/utils.js","webpack://vendo/./node_modules/diffie-hellman/browser.js","webpack://vendo/./node_modules/diffie-hellman/lib/dh.js","webpack://vendo/./node_modules/diffie-hellman/lib/generatePrime.js","webpack://vendo/./node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","webpack://vendo/./node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js","webpack://vendo/./node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js"],"sourcesContent":["'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar utils = require('./utils');\nvar Cipher = require('./cipher');\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n","'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n"],"names":["exports","utils","Cipher","DES","CBC","EDE","assert","inherits","proto","CBCState","iv","equal","length","this","Array","i","instantiate","Base","options","call","_cbcInit","keys","Object","key","prototype","create","state","_cbcState","_update","inp","inOff","out","outOff","superProto","constructor","super_","type","blockSize","_init","buffer","bufferOff","module","update","data","_updateDecrypt","_updateEncrypt","_buffer","off","min","Math","_flushBuffer","inputOff","outputOff","count","max","ceil","final","first","last","_finalEncrypt","_finalDecrypt","concat","_pad","_unpad","DESState","tmp","_desState","deriveKeys","shiftTable","kL","readUInt32BE","kR","pc1","shift","r28shl","pc2","l","r","ip","_encrypt","_decrypt","writeUInt32BE","value","pad","slice","lStart","rStart","keyL","keyR","expand","s","substitute","f","permute","t","rip","EDEState","k1","k2","k3","ciphers","_edeState","bytes","res","inL","inR","outL","outR","j","num","pc2table","len","sTable","b","sb","permuteTable","padSplit","size","group","str","toString","push","join","generatePrime","primes","DH","getDiffieHellman","mod","prime","Buffer","gen","ENCODINGS","createDiffieHellman","enc","generator","genc","isBuffer","undefined","DiffieHellmanGroup","createDiffieHellmanGroup","DiffieHellman","BN","MillerRabin","millerRabin","TWENTYFOUR","ELEVEN","TEN","THREE","SEVEN","randomBytes","setPublicKey","pub","_pub","setPrivateKey","priv","_priv","primeCache","checkPrime","hex","rem","error","isEven","simpleSieve","fermatTest","test","shrn","cmp","malleable","setGenerator","__prime","_prime","mont","_primeLen","_primeCode","formatReturnValue","bn","buf","toArray","defineProperty","enumerable","get","__gen","generateKeys","_gen","toRed","redPow","fromRed","getPublicKey","computeSecret","other","secret","getPrime","front","fill","getPrivateKey","getGenerator","findPrime","ONE","TWO","FIVE","FOUR","_getPrimes","limit","k","sqrt","p","modn","cmpn","red","subn","bits","n2","bitLength","ishrn","iadd","testn","val","msg","Error","ctor","superCtor","TempCtor","number","base","endian","isBN","negative","words","wordSize","window","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","parseBase","start","end","mul","isArray","left","right","_initNumber","_initArray","replace","_parseHex","_parseBase","w","strip","parseLength","limbLen","limbPow","total","word","imuln","_iaddn","pow","copy","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bit","wbit","smallMulTo","self","a","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","mulTo","makeRBT","N","revBin","rb","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","shln","ushln","ushrn","imaskn","maskn","isubn","addn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","ctx","convertTo","_forceRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","k256","p224","p192","p25519","MPrime","name","_tmp","K256","P224","P192","P25519","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","u","getParamBytesForAlg","MAX_OCTET","CLASS_UNIVERSAL","PRIMITIVE_BIT","TAG_SEQ","TAG_INT","ENCODED_TAG_SEQ","ENCODED_TAG_INT","base64Url","base64","signatureAsBuffer","signature","from","TypeError","derToJose","alg","paramBytes","maxEncodedParamLength","inputLength","offset","seqLength","rLength","rOffset","sLength","sOffset","rPadding","sPadding","dst","allocUnsafe","countPadding","stop","needsSign","joseToDer","signatureBytes","rsBytes","shortLength","getParamSize","keySize","result","paramBytesForAlg","ES256","ES384","ES512"],"sourceRoot":""}